{"env_info": "sys.platform: linux\nPython: 3.9.11 (main, Mar 29 2022, 19:08:29) [GCC 7.5.0]\nCUDA available: True\nGPU 0: Tesla T4\nCUDA_HOME: /root/miniconda3/envs/manhdq\nNVCC: Cuda compilation tools, release 11.3, V11.3.58\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.11.0+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0+cu113\nOpenCV: 4.4.0\nMMCV: 1.5.3\nMMCV Compiler: n/a\nMMCV CUDA Compiler: n/a\nMMDetection: 2.7.0+", "config": "optimizer = dict(type='SGD', lr=0.00625, weight_decay=0.0005)\noptimizer_config = dict(grad_clip=None)\nlr_mult = 8\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=10,\n    warmup_ratio=0.001,\n    step=[32, 48, 64, 96])\ntotal_epochs = 128\ncheckpoint_config = dict(interval=5)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ndataset_type = 'RetinaFaceDataset'\ndata_root = '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd'\ntrain_root = '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/color_v1'\nval_root = '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean'\nimg_norm_cfg = dict(\n    mean=[127.5, 127.5, 127.5], std=[128.0, 128.0, 128.0], to_rgb=True)\nalbu_train_transforms = [\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(\n                type='Affine',\n                scale=None,\n                rotate=(-90, 90),\n                shear=None,\n                interpolation=0,\n                fit_output=True)\n        ],\n        p=0.6),\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(type='MotionBlur'),\n            dict(type='GaussianBlur', blur_limit=3)\n        ],\n        p=0.2),\n    dict(type='ToGray', p=0.2)\n]\ntrain_pipeline = [\n    dict(type='LoadImageFromFile', to_float32=True),\n    dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n    dict(\n        type='RandomSquareCrop',\n        crop_choice=[0.3, 0.45, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0]),\n    dict(type='Resize', img_scale=(640, 640), keep_ratio=False),\n    dict(\n        type='RandomFlip',\n        flip_ratio=0.5,\n        direction=['horizontal', 'vertical', 'diagonal']),\n    dict(\n        type='PhotoMetricDistortion',\n        brightness_delta=32,\n        contrast_range=(0.5, 1.5),\n        saturation_range=(0.5, 1.5),\n        hue_delta=18),\n    dict(\n        type='Normalize',\n        mean=[127.5, 127.5, 127.5],\n        std=[128.0, 128.0, 128.0],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_keypointss'\n        ])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(640, 640),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[127.5, 127.5, 127.5],\n                std=[128.0, 128.0, 128.0],\n                to_rgb=True),\n            dict(type='Pad', size=(640, 640), pad_val=0),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=64,\n    workers_per_gpu=8,\n    train=dict(\n        type='RetinaFaceDataset',\n        ann_file=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/color_v1/annotations.txt',\n        img_prefix=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/color_v1/images',\n        pipeline=[\n            dict(type='LoadImageFromFile', to_float32=True),\n            dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n            dict(\n                type='RandomSquareCrop',\n                crop_choice=[\n                    0.3, 0.45, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0\n                ]),\n            dict(type='Resize', img_scale=(640, 640), keep_ratio=False),\n            dict(\n                type='RandomFlip',\n                flip_ratio=0.5,\n                direction=['horizontal', 'vertical', 'diagonal']),\n            dict(\n                type='PhotoMetricDistortion',\n                brightness_delta=32,\n                contrast_range=(0.5, 1.5),\n                saturation_range=(0.5, 1.5),\n                hue_delta=18),\n            dict(\n                type='Normalize',\n                mean=[127.5, 127.5, 127.5],\n                std=[128.0, 128.0, 128.0],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_keypointss'\n                ])\n        ]),\n    val=dict(\n        type='RetinaFaceDataset',\n        ann_file=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/annotations.txt',\n        img_prefix=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/images',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(640, 640),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[127.5, 127.5, 127.5],\n                        std=[128.0, 128.0, 128.0],\n                        to_rgb=True),\n                    dict(type='Pad', size=(640, 640), pad_val=0),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    infer=dict(\n        type='RetinaFaceDataset',\n        ann_file=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/annotations.txt',\n        img_prefix=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/images',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(640, 640),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[127.5, 127.5, 127.5],\n                        std=[128.0, 128.0, 128.0],\n                        to_rgb=True),\n                    dict(type='Pad', size=(640, 640), pad_val=0),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_keypointss'\n                        ])\n                ])\n        ]),\n    test=dict(\n        type='RetinaFaceDataset',\n        ann_file=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/annotations.txt',\n        img_prefix=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/images',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(640, 640),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[127.5, 127.5, 127.5],\n                        std=[128.0, 128.0, 128.0],\n                        to_rgb=True),\n                    dict(type='Pad', size=(640, 640), pad_val=0),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nmodel = dict(\n    type='SCRFD',\n    backbone=dict(\n        type='MobileNetV1',\n        block_cfg=dict(\n            stage_blocks=(2, 3, 2, 6), stage_planes=[16, 16, 40, 72, 152,\n                                                     288])),\n    neck=dict(\n        type='PAFPN',\n        in_channels=[40, 72, 152, 288],\n        out_channels=16,\n        start_level=1,\n        add_extra_convs='on_output',\n        num_outs=3),\n    bbox_head=dict(\n        type='SCRFDHead',\n        num_classes=1,\n        in_channels=16,\n        stacked_convs=2,\n        feat_channels=64,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        cls_reg_share=True,\n        strides_share=False,\n        dw_conv=True,\n        scale_mode=0,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            ratios=[1.0],\n            scales=[1, 2],\n            base_sizes=[16, 64, 256],\n            strides=[8, 16, 32]),\n        loss_cls=dict(\n            type='QualityFocalLoss',\n            use_sigmoid=True,\n            beta=2.0,\n            loss_weight=1.0),\n        loss_dfl=False,\n        reg_max=8,\n        loss_bbox=dict(type='DIoULoss', loss_weight=1.0),\n        use_kps=True,\n        loss_kps=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.5),\n        train_cfg=dict(\n            assigner=dict(type='ATSSAssigner', topk=9),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        test_cfg=dict(\n            nms_pre=-1,\n            min_bbox_size=0,\n            score_thr=0.02,\n            nms=dict(type='nms', iou_threshold=0.45),\n            max_per_img=-1)))\ntrain_cfg = dict(\n    assigner=dict(type='ATSSAssigner', topk=9),\n    allowed_border=-1,\n    pos_weight=-1,\n    debug=False)\nval_cfg = dict(\n    nms_pre=-1,\n    min_bbox_size=0,\n    score_thr=0.02,\n    nms=dict(type='nms', iou_threshold=0.45),\n    max_per_img=-1)\ntest_cfg = dict(\n    nms_pre=-1,\n    min_bbox_size=0,\n    score_thr=0.02,\n    nms=dict(type='nms', iou_threshold=0.45),\n    max_per_img=-1)\nepoch_multi = 1\nevaluation = dict(interval=5, metric='mAP')\nwork_dir = './work_dirs/scrfd_cccd_500m_bnkps_color'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "scrfd_cccd_500m_bnkps_color.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.23862, "loss_cls": 0.00495, "loss_bbox": 1.00328, "loss_kps": 62.26625, "loss": 63.27449, "time": 2.34161}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.34747, "loss_cls": 0.00335, "loss_bbox": 1.00312, "loss_kps": 62.35184, "loss": 63.3583, "time": 1.41995}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.34881, "loss_cls": 0.00269, "loss_bbox": 1.00321, "loss_kps": 61.0368, "loss": 62.04271, "time": 1.44487}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.34891, "loss_cls": 0.00234, "loss_bbox": 1.00309, "loss_kps": 61.50262, "loss": 62.50804, "time": 1.38116}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.16251, "loss_cls": 0.00193, "loss_bbox": 1.0029, "loss_kps": 59.6609, "loss": 60.66573, "time": 2.29405}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.35769, "loss_cls": 0.00178, "loss_bbox": 1.00231, "loss_kps": 59.25515, "loss": 60.25924, "time": 1.45022}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.32822, "loss_cls": 0.00164, "loss_bbox": 1.00195, "loss_kps": 57.84994, "loss": 58.85354, "time": 1.44827}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.31384, "loss_cls": 0.00152, "loss_bbox": 1.00099, "loss_kps": 57.31016, "loss": 58.31268, "time": 1.43858}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.24069, "loss_cls": 0.00158, "loss_bbox": 0.99434, "loss_kps": 54.34976, "loss": 55.34568, "time": 2.41419}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.34743, "loss_cls": 0.0048, "loss_bbox": 0.97869, "loss_kps": 53.88497, "loss": 54.86845, "time": 1.44753}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.33151, "loss_cls": 0.04129, "loss_bbox": 0.89443, "loss_kps": 51.03744, "loss": 51.97316, "time": 1.39527}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.39557, "loss_cls": 0.09479, "loss_bbox": 0.6562, "loss_kps": 41.59172, "loss": 42.34271, "time": 1.4288}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.17897, "loss_cls": 0.20577, "loss_bbox": 0.48766, "loss_kps": 35.67682, "loss": 36.37026, "time": 2.30915}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.30337, "loss_cls": 0.22359, "loss_bbox": 0.46448, "loss_kps": 34.39511, "loss": 35.08318, "time": 1.38614}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.30092, "loss_cls": 0.227, "loss_bbox": 0.4602, "loss_kps": 34.0322, "loss": 34.71941, "time": 1.42773}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.33157, "loss_cls": 0.22692, "loss_bbox": 0.46039, "loss_kps": 33.94882, "loss": 34.63612, "time": 1.44065}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.10491, "loss_cls": 0.2385, "loss_bbox": 0.44618, "loss_kps": 32.63962, "loss": 33.3243, "time": 2.17753}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.34267, "loss_cls": 0.23231, "loss_bbox": 0.44926, "loss_kps": 32.74538, "loss": 33.42695, "time": 1.42058}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.34709, "loss_cls": 0.24517, "loss_bbox": 0.43703, "loss_kps": 31.65799, "loss": 32.34019, "time": 1.41247}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.35701, "loss_cls": 0.24779, "loss_bbox": 0.42872, "loss_kps": 31.15223, "loss": 31.82873, "time": 1.41839}
{"mode": "val", "epoch": 5, "iter": 241, "lr": 0.00625, "mAP": 0.08382}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.08755, "loss_cls": 0.2595, "loss_bbox": 0.41892, "loss_kps": 30.92746, "loss": 31.60588, "time": 2.15828}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.34374, "loss_cls": 0.24936, "loss_bbox": 0.42554, "loss_kps": 30.20065, "loss": 30.87556, "time": 1.51356}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.35535, "loss_cls": 0.2511, "loss_bbox": 0.42488, "loss_kps": 31.59192, "loss": 32.26791, "time": 1.41384}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.39775, "loss_cls": 0.25222, "loss_bbox": 0.41579, "loss_kps": 29.19844, "loss": 29.86644, "time": 1.439}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.15756, "loss_cls": 0.26774, "loss_bbox": 0.40401, "loss_kps": 29.22187, "loss": 29.89361, "time": 2.16184}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.34282, "loss_cls": 0.25765, "loss_bbox": 0.40851, "loss_kps": 28.42196, "loss": 29.08812, "time": 1.49624}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.34115, "loss_cls": 0.25658, "loss_bbox": 0.41078, "loss_kps": 29.8109, "loss": 30.47826, "time": 1.40791}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.31524, "loss_cls": 0.26571, "loss_bbox": 0.4045, "loss_kps": 28.77859, "loss": 29.4488, "time": 1.39996}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.17284, "loss_cls": 0.27889, "loss_bbox": 0.39748, "loss_kps": 27.05564, "loss": 27.73201, "time": 2.25728}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.22978, "loss_cls": 0.27204, "loss_bbox": 0.39933, "loss_kps": 28.18395, "loss": 28.85532, "time": 1.17987}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.37971, "loss_cls": 0.27086, "loss_bbox": 0.39955, "loss_kps": 27.443, "loss": 28.11341, "time": 1.54156}
{"mode": "train", "epoch": 8, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.37711, "loss_cls": 0.27033, "loss_bbox": 0.39268, "loss_kps": 27.43807, "loss": 28.10107, "time": 1.45283}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.1486, "loss_cls": 0.27441, "loss_bbox": 0.38325, "loss_kps": 25.17032, "loss": 25.82797, "time": 2.2784}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.37374, "loss_cls": 0.26682, "loss_bbox": 0.39145, "loss_kps": 26.3609, "loss": 27.01918, "time": 1.42026}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.3262, "loss_cls": 0.26335, "loss_bbox": 0.38298, "loss_kps": 24.83619, "loss": 25.48253, "time": 1.31279}
{"mode": "train", "epoch": 9, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.34948, "loss_cls": 0.25803, "loss_bbox": 0.38192, "loss_kps": 25.13439, "loss": 25.77434, "time": 1.42804}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.09949, "loss_cls": 0.25945, "loss_bbox": 0.38153, "loss_kps": 24.23325, "loss": 24.87422, "time": 2.23044}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.36104, "loss_cls": 0.25901, "loss_bbox": 0.37386, "loss_kps": 24.21066, "loss": 24.84353, "time": 1.44854}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.27092, "loss_cls": 0.25271, "loss_bbox": 0.37085, "loss_kps": 23.72899, "loss": 24.35255, "time": 1.21766}
{"mode": "train", "epoch": 10, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.34568, "loss_cls": 0.26252, "loss_bbox": 0.36567, "loss_kps": 22.48778, "loss": 23.11596, "time": 1.49442}
{"mode": "val", "epoch": 10, "iter": 241, "lr": 0.00625, "mAP": 0.34316}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.1626, "loss_cls": 0.24776, "loss_bbox": 0.37013, "loss_kps": 23.14061, "loss": 23.7585, "time": 2.29402}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.33097, "loss_cls": 0.26329, "loss_bbox": 0.36687, "loss_kps": 23.406, "loss": 24.03617, "time": 1.41742}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.31319, "loss_cls": 0.2657, "loss_bbox": 0.3628, "loss_kps": 22.82443, "loss": 23.45293, "time": 1.37319}
{"mode": "train", "epoch": 11, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.3355, "loss_cls": 0.26407, "loss_bbox": 0.35987, "loss_kps": 23.72531, "loss": 24.34926, "time": 1.37198}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.16672, "loss_cls": 0.2772, "loss_bbox": 0.35242, "loss_kps": 23.50572, "loss": 24.13534, "time": 2.25305}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.31192, "loss_cls": 0.28623, "loss_bbox": 0.33976, "loss_kps": 22.42488, "loss": 23.05087, "time": 1.40418}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.39413, "loss_cls": 0.28992, "loss_bbox": 0.34167, "loss_kps": 23.36575, "loss": 23.99734, "time": 1.40451}
{"mode": "train", "epoch": 12, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.27851, "loss_cls": 0.29876, "loss_bbox": 0.33694, "loss_kps": 23.50559, "loss": 24.14129, "time": 1.19237}
{"mode": "train", "epoch": 13, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.11035, "loss_cls": 0.31137, "loss_bbox": 0.32436, "loss_kps": 22.59589, "loss": 23.23162, "time": 2.27072}
{"mode": "train", "epoch": 13, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.36192, "loss_cls": 0.31541, "loss_bbox": 0.32774, "loss_kps": 23.14824, "loss": 23.79138, "time": 1.43719}
{"mode": "train", "epoch": 13, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.4109, "loss_cls": 0.32031, "loss_bbox": 0.32413, "loss_kps": 23.25559, "loss": 23.90003, "time": 1.42046}
{"mode": "train", "epoch": 13, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.3368, "loss_cls": 0.32403, "loss_bbox": 0.32338, "loss_kps": 22.66801, "loss": 23.31542, "time": 1.42806}
{"mode": "train", "epoch": 14, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.13609, "loss_cls": 0.33227, "loss_bbox": 0.32006, "loss_kps": 22.98082, "loss": 23.63316, "time": 2.26631}
{"mode": "train", "epoch": 14, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.30776, "loss_cls": 0.33955, "loss_bbox": 0.32406, "loss_kps": 23.87896, "loss": 24.54257, "time": 1.44176}
{"mode": "train", "epoch": 14, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.37521, "loss_cls": 0.34354, "loss_bbox": 0.32239, "loss_kps": 24.81551, "loss": 25.48144, "time": 1.42624}
{"mode": "train", "epoch": 14, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.31902, "loss_cls": 0.34018, "loss_bbox": 0.33072, "loss_kps": 24.41624, "loss": 25.08715, "time": 1.44033}
{"mode": "train", "epoch": 15, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.22824, "loss_cls": 0.36185, "loss_bbox": 0.3256, "loss_kps": 25.10857, "loss": 25.79602, "time": 2.34264}
{"mode": "train", "epoch": 15, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.35051, "loss_cls": 0.37607, "loss_bbox": 0.31722, "loss_kps": 25.415, "loss": 26.1083, "time": 1.52157}
{"mode": "train", "epoch": 15, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.37951, "loss_cls": 0.38776, "loss_bbox": 0.30958, "loss_kps": 24.97024, "loss": 25.66758, "time": 1.45397}
{"mode": "train", "epoch": 15, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.35694, "loss_cls": 0.39909, "loss_bbox": 0.30611, "loss_kps": 25.60946, "loss": 26.31466, "time": 1.44099}
{"mode": "val", "epoch": 15, "iter": 241, "lr": 0.00625, "mAP": 0.56392}
{"mode": "train", "epoch": 16, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.19531, "loss_cls": 0.4172, "loss_bbox": 0.29576, "loss_kps": 24.17917, "loss": 24.89213, "time": 2.32786}
{"mode": "train", "epoch": 16, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.28185, "loss_cls": 0.42673, "loss_bbox": 0.29225, "loss_kps": 25.17405, "loss": 25.89302, "time": 1.4195}
{"mode": "train", "epoch": 16, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.34182, "loss_cls": 0.44433, "loss_bbox": 0.2843, "loss_kps": 25.19153, "loss": 25.92016, "time": 1.41281}
{"mode": "train", "epoch": 16, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.38902, "loss_cls": 0.45094, "loss_bbox": 0.28054, "loss_kps": 24.40553, "loss": 25.13701, "time": 1.43902}
{"mode": "train", "epoch": 17, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.03506, "loss_cls": 0.45471, "loss_bbox": 0.27193, "loss_kps": 24.91488, "loss": 25.64152, "time": 2.23088}
{"mode": "train", "epoch": 17, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.3569, "loss_cls": 0.46319, "loss_bbox": 0.27109, "loss_kps": 23.96818, "loss": 24.70246, "time": 1.44707}
{"mode": "train", "epoch": 17, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.34683, "loss_cls": 0.45685, "loss_bbox": 0.2696, "loss_kps": 24.59675, "loss": 25.3232, "time": 1.42296}
{"mode": "train", "epoch": 17, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.38055, "loss_cls": 0.46825, "loss_bbox": 0.27145, "loss_kps": 24.27135, "loss": 25.01106, "time": 1.43298}
{"mode": "train", "epoch": 18, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.16914, "loss_cls": 0.46466, "loss_bbox": 0.26547, "loss_kps": 24.01913, "loss": 24.74926, "time": 2.24675}
{"mode": "train", "epoch": 18, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.35231, "loss_cls": 0.46574, "loss_bbox": 0.25817, "loss_kps": 23.11696, "loss": 23.84088, "time": 1.44664}
{"mode": "train", "epoch": 18, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.35374, "loss_cls": 0.47253, "loss_bbox": 0.26115, "loss_kps": 23.36634, "loss": 24.10002, "time": 1.42546}
{"mode": "train", "epoch": 18, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.33855, "loss_cls": 0.46172, "loss_bbox": 0.25971, "loss_kps": 22.79287, "loss": 23.5143, "time": 1.42418}
{"mode": "train", "epoch": 19, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.08403, "loss_cls": 0.45448, "loss_bbox": 0.25746, "loss_kps": 22.35448, "loss": 23.06642, "time": 2.08292}
{"mode": "train", "epoch": 19, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.34368, "loss_cls": 0.45902, "loss_bbox": 0.2536, "loss_kps": 22.34767, "loss": 23.06028, "time": 1.51825}
{"mode": "train", "epoch": 19, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.31811, "loss_cls": 0.45635, "loss_bbox": 0.25264, "loss_kps": 22.1353, "loss": 22.8443, "time": 1.41791}
{"mode": "train", "epoch": 19, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.33481, "loss_cls": 0.4656, "loss_bbox": 0.25455, "loss_kps": 23.03304, "loss": 23.75319, "time": 1.44695}
{"mode": "train", "epoch": 20, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.09737, "loss_cls": 0.46394, "loss_bbox": 0.24904, "loss_kps": 22.46247, "loss": 23.17545, "time": 2.22444}
{"mode": "train", "epoch": 20, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.29664, "loss_cls": 0.46558, "loss_bbox": 0.24975, "loss_kps": 21.8817, "loss": 22.59703, "time": 1.30026}
{"mode": "train", "epoch": 20, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.36642, "loss_cls": 0.46207, "loss_bbox": 0.24891, "loss_kps": 21.75779, "loss": 22.46876, "time": 1.49949}
{"mode": "train", "epoch": 20, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.37505, "loss_cls": 0.45608, "loss_bbox": 0.25067, "loss_kps": 21.62208, "loss": 22.32883, "time": 1.5239}
{"mode": "val", "epoch": 20, "iter": 241, "lr": 0.00625, "mAP": 0.72061}
{"mode": "train", "epoch": 21, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.19183, "loss_cls": 0.46343, "loss_bbox": 0.2448, "loss_kps": 21.39174, "loss": 22.09997, "time": 2.39971}
{"mode": "train", "epoch": 21, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.28938, "loss_cls": 0.4593, "loss_bbox": 0.24546, "loss_kps": 21.34861, "loss": 22.05337, "time": 1.30331}
{"mode": "train", "epoch": 21, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.36512, "loss_cls": 0.46244, "loss_bbox": 0.24594, "loss_kps": 22.02175, "loss": 22.73013, "time": 1.58346}
{"mode": "train", "epoch": 21, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.3913, "loss_cls": 0.45338, "loss_bbox": 0.24463, "loss_kps": 20.48395, "loss": 21.18195, "time": 1.44563}
{"mode": "train", "epoch": 22, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.12644, "loss_cls": 0.45813, "loss_bbox": 0.2443, "loss_kps": 20.95501, "loss": 21.65743, "time": 2.27753}
{"mode": "train", "epoch": 22, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.40646, "loss_cls": 0.45118, "loss_bbox": 0.23692, "loss_kps": 19.08602, "loss": 19.77412, "time": 1.45662}
{"mode": "train", "epoch": 22, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.29828, "loss_cls": 0.45922, "loss_bbox": 0.24209, "loss_kps": 21.05015, "loss": 21.75146, "time": 1.36777}
{"mode": "train", "epoch": 22, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.34354, "loss_cls": 0.46194, "loss_bbox": 0.24001, "loss_kps": 21.55154, "loss": 22.25349, "time": 1.40481}
{"mode": "train", "epoch": 23, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.12842, "loss_cls": 0.44695, "loss_bbox": 0.23996, "loss_kps": 20.35337, "loss": 21.04028, "time": 2.24855}
{"mode": "train", "epoch": 23, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.318, "loss_cls": 0.45183, "loss_bbox": 0.23549, "loss_kps": 19.30905, "loss": 19.99636, "time": 1.41902}
{"mode": "train", "epoch": 23, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.30115, "loss_cls": 0.45437, "loss_bbox": 0.23585, "loss_kps": 19.62921, "loss": 20.31942, "time": 1.28317}
{"mode": "train", "epoch": 23, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.35103, "loss_cls": 0.44797, "loss_bbox": 0.23897, "loss_kps": 20.30992, "loss": 20.99686, "time": 1.48532}
{"mode": "train", "epoch": 24, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.20723, "loss_cls": 0.448, "loss_bbox": 0.23483, "loss_kps": 18.80602, "loss": 19.48885, "time": 2.27637}
{"mode": "train", "epoch": 24, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.29754, "loss_cls": 0.45459, "loss_bbox": 0.23402, "loss_kps": 19.44094, "loss": 20.12955, "time": 1.38155}
{"mode": "train", "epoch": 24, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.33607, "loss_cls": 0.44829, "loss_bbox": 0.23397, "loss_kps": 19.14205, "loss": 19.82431, "time": 1.43587}
{"mode": "train", "epoch": 24, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.25854, "loss_cls": 0.45498, "loss_bbox": 0.2328, "loss_kps": 18.84686, "loss": 19.53464, "time": 1.19936}
{"mode": "train", "epoch": 25, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.12751, "loss_cls": 0.45375, "loss_bbox": 0.22828, "loss_kps": 19.03796, "loss": 19.71999, "time": 2.27935}
{"mode": "train", "epoch": 25, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.32787, "loss_cls": 0.44603, "loss_bbox": 0.22858, "loss_kps": 18.92042, "loss": 19.59504, "time": 1.44505}
{"mode": "train", "epoch": 25, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.35862, "loss_cls": 0.44014, "loss_bbox": 0.22899, "loss_kps": 18.34673, "loss": 19.01586, "time": 1.44052}
{"mode": "train", "epoch": 25, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.39535, "loss_cls": 0.44637, "loss_bbox": 0.22577, "loss_kps": 18.30484, "loss": 18.97698, "time": 1.39984}
{"mode": "val", "epoch": 25, "iter": 241, "lr": 0.00625, "mAP": 0.83313}
{"mode": "train", "epoch": 26, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.14644, "loss_cls": 0.44826, "loss_bbox": 0.22588, "loss_kps": 17.76436, "loss": 18.43849, "time": 2.30137}
{"mode": "train", "epoch": 26, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.34111, "loss_cls": 0.44325, "loss_bbox": 0.224, "loss_kps": 17.43102, "loss": 18.09827, "time": 1.42653}
{"mode": "train", "epoch": 26, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.38817, "loss_cls": 0.44155, "loss_bbox": 0.2243, "loss_kps": 17.72855, "loss": 18.3944, "time": 1.45472}
{"mode": "train", "epoch": 26, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.29135, "loss_cls": 0.44546, "loss_bbox": 0.22407, "loss_kps": 18.14105, "loss": 18.81059, "time": 1.42123}
{"mode": "train", "epoch": 27, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.1258, "loss_cls": 0.44916, "loss_bbox": 0.2232, "loss_kps": 17.98695, "loss": 18.65931, "time": 2.25215}
{"mode": "train", "epoch": 27, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.35061, "loss_cls": 0.43764, "loss_bbox": 0.22301, "loss_kps": 17.21175, "loss": 17.8724, "time": 1.42054}
{"mode": "train", "epoch": 27, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.36039, "loss_cls": 0.43961, "loss_bbox": 0.22177, "loss_kps": 16.85266, "loss": 17.51404, "time": 1.40757}
{"mode": "train", "epoch": 27, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.34291, "loss_cls": 0.43784, "loss_bbox": 0.22252, "loss_kps": 17.43512, "loss": 18.09548, "time": 1.39192}
{"mode": "train", "epoch": 28, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.22864, "loss_cls": 0.42843, "loss_bbox": 0.21986, "loss_kps": 15.98086, "loss": 16.62914, "time": 2.36267}
{"mode": "train", "epoch": 28, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.37737, "loss_cls": 0.43761, "loss_bbox": 0.22364, "loss_kps": 17.22524, "loss": 17.8865, "time": 1.41611}
{"mode": "train", "epoch": 28, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.32539, "loss_cls": 0.44625, "loss_bbox": 0.22155, "loss_kps": 17.37284, "loss": 18.04065, "time": 1.44537}
{"mode": "train", "epoch": 28, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.29814, "loss_cls": 0.43841, "loss_bbox": 0.2213, "loss_kps": 16.6003, "loss": 17.26001, "time": 1.43052}
{"mode": "train", "epoch": 29, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.08142, "loss_cls": 0.42873, "loss_bbox": 0.22236, "loss_kps": 16.37203, "loss": 17.02312, "time": 2.25456}
{"mode": "train", "epoch": 29, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.3331, "loss_cls": 0.43996, "loss_bbox": 0.2192, "loss_kps": 16.74349, "loss": 17.40265, "time": 1.41119}
{"mode": "train", "epoch": 29, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.34766, "loss_cls": 0.42571, "loss_bbox": 0.2188, "loss_kps": 16.32557, "loss": 16.97009, "time": 1.43337}
{"mode": "train", "epoch": 29, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.30233, "loss_cls": 0.42684, "loss_bbox": 0.21628, "loss_kps": 15.38571, "loss": 16.02882, "time": 1.43258}
{"mode": "train", "epoch": 30, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.11029, "loss_cls": 0.43017, "loss_bbox": 0.21759, "loss_kps": 16.0175, "loss": 16.66526, "time": 2.16365}
{"mode": "train", "epoch": 30, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.35116, "loss_cls": 0.4268, "loss_bbox": 0.21338, "loss_kps": 15.38906, "loss": 16.02924, "time": 1.43282}
{"mode": "train", "epoch": 30, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.3687, "loss_cls": 0.42748, "loss_bbox": 0.21583, "loss_kps": 16.16519, "loss": 16.8085, "time": 1.43074}
{"mode": "train", "epoch": 30, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.32192, "loss_cls": 0.43513, "loss_bbox": 0.21512, "loss_kps": 16.17086, "loss": 16.82111, "time": 1.42798}
{"mode": "val", "epoch": 30, "iter": 241, "lr": 0.00625, "mAP": 0.91117}
{"mode": "train", "epoch": 31, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.11192, "loss_cls": 0.42658, "loss_bbox": 0.21545, "loss_kps": 15.52792, "loss": 16.16994, "time": 2.10644}
{"mode": "train", "epoch": 31, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.30345, "loss_cls": 0.42766, "loss_bbox": 0.21666, "loss_kps": 15.66057, "loss": 16.30488, "time": 1.44096}
{"mode": "train", "epoch": 31, "iter": 150, "lr": 0.00625, "memory": 7991, "data_time": 0.32022, "loss_cls": 0.41584, "loss_bbox": 0.21051, "loss_kps": 15.12772, "loss": 15.75407, "time": 1.41896}
{"mode": "train", "epoch": 31, "iter": 200, "lr": 0.00625, "memory": 7991, "data_time": 0.35971, "loss_cls": 0.42063, "loss_bbox": 0.21383, "loss_kps": 15.51796, "loss": 16.15241, "time": 1.42647}
{"mode": "train", "epoch": 32, "iter": 50, "lr": 0.00625, "memory": 7991, "data_time": 1.11688, "loss_cls": 0.41818, "loss_bbox": 0.21509, "loss_kps": 14.6745, "loss": 15.30777, "time": 2.19879}
{"mode": "train", "epoch": 32, "iter": 100, "lr": 0.00625, "memory": 7991, "data_time": 0.33597, "loss_cls": 0.42094, "loss_bbox": 0.21264, "loss_kps": 14.99238, "loss": 15.62596, "time": 1.38931}
