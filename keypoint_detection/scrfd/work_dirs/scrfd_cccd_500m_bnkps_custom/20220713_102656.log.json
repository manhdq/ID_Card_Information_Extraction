{"env_info": "sys.platform: linux\nPython: 3.9.11 (main, Mar 29 2022, 19:08:29) [GCC 7.5.0]\nCUDA available: True\nGPU 0: Tesla T4\nCUDA_HOME: /root/miniconda3/envs/manhdq\nNVCC: Cuda compilation tools, release 11.3, V11.3.58\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.11.0+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0+cu113\nOpenCV: 4.4.0\nMMCV: 1.5.3\nMMCV Compiler: n/a\nMMCV CUDA Compiler: n/a\nMMDetection: 2.7.0+", "config": "optimizer = dict(type='Adam', lr=0.000625, weight_decay=0.0005)\noptimizer_config = dict(grad_clip=None)\nlr_mult = 8\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=10,\n    warmup_ratio=0.001,\n    step=[32, 48, 80])\ntotal_epochs = 96\ncheckpoint_config = dict(interval=5)\nlog_config = dict(interval=10, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '/home/manhdq/ID_Card_Information_Extraction/keypoint_detection/scrfd/work_dirs/scrfd_cccd_500m_bnkps_poisson_color_dummy/epoch_35.pth'\nresume_from = None\nworkflow = [('train', 1)]\ndataset_type = 'RetinaFaceDataset'\ndata_root = '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd'\ntrain_root = [\n    '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean_v2',\n    '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/poisson_v1'\n]\nval_root = '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean'\nimg_norm_cfg = dict(\n    mean=[127.5, 127.5, 127.5], std=[128.0, 128.0, 128.0], to_rgb=True)\nalbu_train_transforms = [\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(\n                type='Affine',\n                scale=None,\n                rotate=(-90, 90),\n                shear=None,\n                interpolation=0,\n                fit_output=True)\n        ],\n        p=0.6),\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(type='MotionBlur'),\n            dict(type='GaussianBlur', blur_limit=3)\n        ],\n        p=0.2),\n    dict(type='ToGray', p=0.2)\n]\ntrain_pipeline = [\n    dict(type='LoadImageFromFile', to_float32=True),\n    dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n    dict(\n        type='RandomSquareCrop',\n        crop_choice=[0.3, 0.45, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0]),\n    dict(type='Resize', img_scale=(640, 640), keep_ratio=False),\n    dict(\n        type='RandomFlip',\n        flip_ratio=0.5,\n        direction=['horizontal', 'vertical', 'diagonal']),\n    dict(\n        type='PhotoMetricDistortion',\n        brightness_delta=32,\n        contrast_range=(0.5, 1.5),\n        saturation_range=(0.5, 1.5),\n        hue_delta=18),\n    dict(\n        type='Normalize',\n        mean=[127.5, 127.5, 127.5],\n        std=[128.0, 128.0, 128.0],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_keypointss'\n        ])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(640, 640),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[127.5, 127.5, 127.5],\n                std=[128.0, 128.0, 128.0],\n                to_rgb=True),\n            dict(type='Pad', size=(640, 640), pad_val=0),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=64,\n    workers_per_gpu=8,\n    train=dict(\n        type='RetinaFaceDataset',\n        ann_file=[\n            '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean_v2/annotations.txt',\n            '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/poisson_v1/annotations.txt'\n        ],\n        img_prefix=[\n            '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean_v2/images',\n            '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/poisson_v1/images'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile', to_float32=True),\n            dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n            dict(\n                type='RandomSquareCrop',\n                crop_choice=[\n                    0.3, 0.45, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0\n                ]),\n            dict(type='Resize', img_scale=(640, 640), keep_ratio=False),\n            dict(\n                type='RandomFlip',\n                flip_ratio=0.5,\n                direction=['horizontal', 'vertical', 'diagonal']),\n            dict(\n                type='PhotoMetricDistortion',\n                brightness_delta=32,\n                contrast_range=(0.5, 1.5),\n                saturation_range=(0.5, 1.5),\n                hue_delta=18),\n            dict(\n                type='Normalize',\n                mean=[127.5, 127.5, 127.5],\n                std=[128.0, 128.0, 128.0],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_keypointss'\n                ])\n        ]),\n    val=dict(\n        type='RetinaFaceDataset',\n        ann_file=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/annotations.txt',\n        img_prefix=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/images',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(640, 640),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[127.5, 127.5, 127.5],\n                        std=[128.0, 128.0, 128.0],\n                        to_rgb=True),\n                    dict(type='Pad', size=(640, 640), pad_val=0),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    infer=dict(\n        type='RetinaFaceDataset',\n        ann_file=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/annotations.txt',\n        img_prefix=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/images',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(640, 640),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[127.5, 127.5, 127.5],\n                        std=[128.0, 128.0, 128.0],\n                        to_rgb=True),\n                    dict(type='Pad', size=(640, 640), pad_val=0),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_keypointss'\n                        ])\n                ])\n        ]),\n    test=dict(\n        type='RetinaFaceDataset',\n        ann_file=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/annotations.txt',\n        img_prefix=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/images',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(640, 640),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[127.5, 127.5, 127.5],\n                        std=[128.0, 128.0, 128.0],\n                        to_rgb=True),\n                    dict(type='Pad', size=(640, 640), pad_val=0),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nmodel = dict(\n    type='SCRFD',\n    backbone=dict(\n        type='MobileNetV1',\n        block_cfg=dict(\n            stage_blocks=(2, 3, 2, 6), stage_planes=[16, 16, 40, 72, 152,\n                                                     288])),\n    neck=dict(\n        type='PAFPN',\n        in_channels=[40, 72, 152, 288],\n        out_channels=16,\n        start_level=1,\n        add_extra_convs='on_output',\n        num_outs=3),\n    bbox_head=dict(\n        type='SCRFDHead',\n        num_classes=1,\n        in_channels=16,\n        stacked_convs=2,\n        feat_channels=64,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        cls_reg_share=True,\n        strides_share=False,\n        dw_conv=True,\n        scale_mode=0,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            ratios=[1.0],\n            scales=[1, 2],\n            base_sizes=[16, 64, 256],\n            strides=[8, 16, 32]),\n        loss_cls=dict(\n            type='QualityFocalLoss',\n            use_sigmoid=True,\n            beta=2.0,\n            loss_weight=1.0),\n        loss_dfl=False,\n        reg_max=8,\n        loss_bbox=dict(type='DIoULoss', loss_weight=1.0),\n        use_kps=True,\n        loss_kps=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.5),\n        train_cfg=dict(\n            assigner=dict(type='ATSSAssigner', topk=9),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        test_cfg=dict(\n            nms_pre=-1,\n            min_bbox_size=0,\n            score_thr=0.02,\n            nms=dict(type='nms', iou_threshold=0.45),\n            max_per_img=-1)))\ntrain_cfg = dict(\n    assigner=dict(type='ATSSAssigner', topk=9),\n    allowed_border=-1,\n    pos_weight=-1,\n    debug=False)\nval_cfg = dict(\n    nms_pre=-1,\n    min_bbox_size=0,\n    score_thr=0.02,\n    nms=dict(type='nms', iou_threshold=0.45),\n    max_per_img=-1)\ntest_cfg = dict(\n    nms_pre=-1,\n    min_bbox_size=0,\n    score_thr=0.02,\n    nms=dict(type='nms', iou_threshold=0.45),\n    max_per_img=-1)\nepoch_multi = 1\nevaluation = dict(interval=5, metric='mAP')\nwork_dir = './work_dirs/scrfd_cccd_500m_bnkps_custom'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "scrfd_cccd_500m_bnkps_custom.py"}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 0.00056, "memory": 7996, "data_time": 3.22437, "loss_cls": 0.17839, "loss_bbox": 0.06143, "loss_kps": 4.41709, "loss": 4.65691, "time": 4.46841}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 0.00063, "memory": 7996, "data_time": 0.15258, "loss_cls": 0.17107, "loss_bbox": 0.06301, "loss_kps": 5.2759, "loss": 5.50998, "time": 1.26916}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 0.00063, "memory": 7996, "data_time": 0.1142, "loss_cls": 0.18019, "loss_bbox": 0.06095, "loss_kps": 4.86172, "loss": 5.10286, "time": 1.07107}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 0.00063, "memory": 7996, "data_time": 0.12483, "loss_cls": 0.1706, "loss_bbox": 0.06166, "loss_kps": 5.12345, "loss": 5.35571, "time": 1.01982}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00063, "memory": 7996, "data_time": 0.14718, "loss_cls": 0.17092, "loss_bbox": 0.06101, "loss_kps": 5.11736, "loss": 5.34928, "time": 1.03694}
{"mode": "train", "epoch": 1, "iter": 60, "lr": 0.00063, "memory": 7996, "data_time": 0.14639, "loss_cls": 0.17679, "loss_bbox": 0.05931, "loss_kps": 5.63331, "loss": 5.86942, "time": 1.0242}
{"mode": "train", "epoch": 1, "iter": 70, "lr": 0.00063, "memory": 7996, "data_time": 0.12055, "loss_cls": 0.1764, "loss_bbox": 0.06265, "loss_kps": 5.28334, "loss": 5.52238, "time": 0.98876}
{"mode": "train", "epoch": 1, "iter": 80, "lr": 0.00063, "memory": 7996, "data_time": 0.11802, "loss_cls": 0.17356, "loss_bbox": 0.06264, "loss_kps": 4.62903, "loss": 4.86524, "time": 0.98699}
{"mode": "train", "epoch": 1, "iter": 90, "lr": 0.00063, "memory": 7996, "data_time": 0.14485, "loss_cls": 0.18915, "loss_bbox": 0.0637, "loss_kps": 4.45717, "loss": 4.71002, "time": 1.05456}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00063, "memory": 7996, "data_time": 0.1525, "loss_cls": 0.17981, "loss_bbox": 0.06143, "loss_kps": 5.301, "loss": 5.54225, "time": 1.01987}
{"mode": "train", "epoch": 1, "iter": 110, "lr": 0.00063, "memory": 7996, "data_time": 0.10955, "loss_cls": 0.17988, "loss_bbox": 0.0606, "loss_kps": 5.08857, "loss": 5.32905, "time": 0.98851}
{"mode": "train", "epoch": 1, "iter": 120, "lr": 0.00063, "memory": 7996, "data_time": 0.1154, "loss_cls": 0.19304, "loss_bbox": 0.06187, "loss_kps": 5.14241, "loss": 5.39732, "time": 1.02199}
{"mode": "train", "epoch": 1, "iter": 130, "lr": 0.00063, "memory": 7996, "data_time": 0.14429, "loss_cls": 0.18641, "loss_bbox": 0.06301, "loss_kps": 6.38059, "loss": 6.63001, "time": 1.02847}
{"mode": "train", "epoch": 1, "iter": 140, "lr": 0.00063, "memory": 7996, "data_time": 0.14677, "loss_cls": 0.18675, "loss_bbox": 0.06271, "loss_kps": 5.0042, "loss": 5.25366, "time": 1.02204}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00063, "memory": 7996, "data_time": 0.13924, "loss_cls": 0.17895, "loss_bbox": 0.06172, "loss_kps": 6.09223, "loss": 6.3329, "time": 1.01085}
{"mode": "train", "epoch": 1, "iter": 160, "lr": 0.00063, "memory": 7996, "data_time": 0.12677, "loss_cls": 0.18421, "loss_bbox": 0.06355, "loss_kps": 6.43147, "loss": 6.67923, "time": 1.0171}
{"mode": "train", "epoch": 1, "iter": 170, "lr": 0.00063, "memory": 7996, "data_time": 0.14039, "loss_cls": 0.17478, "loss_bbox": 0.06286, "loss_kps": 5.01387, "loss": 5.25151, "time": 1.03246}
{"mode": "train", "epoch": 1, "iter": 180, "lr": 0.00063, "memory": 7996, "data_time": 0.14338, "loss_cls": 0.17377, "loss_bbox": 0.06169, "loss_kps": 4.7142, "loss": 4.94966, "time": 1.03259}
{"mode": "train", "epoch": 1, "iter": 190, "lr": 0.00063, "memory": 7996, "data_time": 0.11985, "loss_cls": 0.17921, "loss_bbox": 0.06158, "loss_kps": 4.51782, "loss": 4.75861, "time": 0.99996}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00063, "memory": 7996, "data_time": 0.12576, "loss_cls": 0.17134, "loss_bbox": 0.06005, "loss_kps": 5.14313, "loss": 5.37453, "time": 1.01366}
{"mode": "train", "epoch": 1, "iter": 210, "lr": 0.00063, "memory": 7996, "data_time": 0.12953, "loss_cls": 0.17369, "loss_bbox": 0.05708, "loss_kps": 4.39081, "loss": 4.62157, "time": 1.00452}
{"mode": "train", "epoch": 1, "iter": 220, "lr": 0.00063, "memory": 7996, "data_time": 0.15968, "loss_cls": 0.17497, "loss_bbox": 0.06282, "loss_kps": 5.60969, "loss": 5.84747, "time": 1.04152}
{"mode": "train", "epoch": 1, "iter": 230, "lr": 0.00063, "memory": 7996, "data_time": 0.10897, "loss_cls": 0.17924, "loss_bbox": 0.06411, "loss_kps": 6.07756, "loss": 6.32091, "time": 1.00808}
{"mode": "train", "epoch": 1, "iter": 240, "lr": 0.00063, "memory": 7996, "data_time": 0.10929, "loss_cls": 0.18472, "loss_bbox": 0.05987, "loss_kps": 5.31984, "loss": 5.56443, "time": 0.96658}
{"mode": "train", "epoch": 2, "iter": 10, "lr": 0.00063, "memory": 7996, "data_time": 3.12557, "loss_cls": 0.17411, "loss_bbox": 0.06008, "loss_kps": 5.0836, "loss": 5.31779, "time": 4.3397}
{"mode": "train", "epoch": 2, "iter": 20, "lr": 0.00063, "memory": 7996, "data_time": 0.15399, "loss_cls": 0.18191, "loss_bbox": 0.06312, "loss_kps": 5.12602, "loss": 5.37105, "time": 1.14408}
{"mode": "train", "epoch": 2, "iter": 30, "lr": 0.00063, "memory": 7996, "data_time": 0.1214, "loss_cls": 0.17412, "loss_bbox": 0.06313, "loss_kps": 5.55648, "loss": 5.79372, "time": 0.98801}
{"mode": "train", "epoch": 2, "iter": 40, "lr": 0.00063, "memory": 7996, "data_time": 0.10112, "loss_cls": 0.17739, "loss_bbox": 0.0658, "loss_kps": 5.20802, "loss": 5.4512, "time": 0.98381}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.00063, "memory": 7996, "data_time": 0.16026, "loss_cls": 0.18587, "loss_bbox": 0.06925, "loss_kps": 5.99346, "loss": 6.24858, "time": 1.03471}
{"mode": "train", "epoch": 2, "iter": 60, "lr": 0.00063, "memory": 7996, "data_time": 0.18939, "loss_cls": 0.17406, "loss_bbox": 0.06719, "loss_kps": 5.39117, "loss": 5.63242, "time": 1.05782}
{"mode": "train", "epoch": 2, "iter": 70, "lr": 0.00063, "memory": 7996, "data_time": 0.10723, "loss_cls": 0.17749, "loss_bbox": 0.0617, "loss_kps": 5.26973, "loss": 5.50892, "time": 1.00203}
{"mode": "train", "epoch": 2, "iter": 80, "lr": 0.00063, "memory": 7996, "data_time": 0.12478, "loss_cls": 0.17672, "loss_bbox": 0.06262, "loss_kps": 5.27791, "loss": 5.51725, "time": 1.00266}
{"mode": "train", "epoch": 2, "iter": 90, "lr": 0.00063, "memory": 7996, "data_time": 0.14993, "loss_cls": 0.1773, "loss_bbox": 0.06269, "loss_kps": 5.71261, "loss": 5.95261, "time": 1.04756}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00063, "memory": 7996, "data_time": 0.18761, "loss_cls": 0.18047, "loss_bbox": 0.06376, "loss_kps": 5.70639, "loss": 5.95061, "time": 1.22255}
{"mode": "train", "epoch": 2, "iter": 110, "lr": 0.00063, "memory": 7996, "data_time": 0.11303, "loss_cls": 0.18555, "loss_bbox": 0.06384, "loss_kps": 4.80525, "loss": 5.05464, "time": 1.12528}
{"mode": "train", "epoch": 2, "iter": 120, "lr": 0.00063, "memory": 7996, "data_time": 0.10452, "loss_cls": 0.18135, "loss_bbox": 0.06648, "loss_kps": 6.42635, "loss": 6.67418, "time": 1.11225}
{"mode": "train", "epoch": 2, "iter": 130, "lr": 0.00063, "memory": 7996, "data_time": 0.19589, "loss_cls": 0.17012, "loss_bbox": 0.06257, "loss_kps": 6.04107, "loss": 6.27375, "time": 1.10728}
{"mode": "train", "epoch": 2, "iter": 140, "lr": 0.00063, "memory": 7996, "data_time": 0.13269, "loss_cls": 0.17373, "loss_bbox": 0.06108, "loss_kps": 5.392, "loss": 5.62681, "time": 1.00379}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.00063, "memory": 7996, "data_time": 0.11464, "loss_cls": 0.1747, "loss_bbox": 0.06174, "loss_kps": 5.88475, "loss": 6.12119, "time": 1.00309}
{"mode": "train", "epoch": 2, "iter": 160, "lr": 0.00063, "memory": 7996, "data_time": 0.11553, "loss_cls": 0.18169, "loss_bbox": 0.06444, "loss_kps": 6.09918, "loss": 6.34531, "time": 1.08404}
{"mode": "train", "epoch": 2, "iter": 170, "lr": 0.00063, "memory": 7996, "data_time": 0.19911, "loss_cls": 0.18221, "loss_bbox": 0.0643, "loss_kps": 5.73245, "loss": 5.97895, "time": 1.26391}
{"mode": "train", "epoch": 2, "iter": 180, "lr": 0.00063, "memory": 7996, "data_time": 0.17147, "loss_cls": 0.18215, "loss_bbox": 0.06157, "loss_kps": 6.41804, "loss": 6.66176, "time": 1.11959}
{"mode": "train", "epoch": 2, "iter": 190, "lr": 0.00063, "memory": 7996, "data_time": 0.12127, "loss_cls": 0.18707, "loss_bbox": 0.06284, "loss_kps": 5.38616, "loss": 5.63607, "time": 1.02583}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00063, "memory": 7996, "data_time": 0.1194, "loss_cls": 0.17403, "loss_bbox": 0.0616, "loss_kps": 4.5854, "loss": 4.82103, "time": 1.00069}
{"mode": "train", "epoch": 2, "iter": 210, "lr": 0.00063, "memory": 7996, "data_time": 0.142, "loss_cls": 0.17762, "loss_bbox": 0.06163, "loss_kps": 5.03056, "loss": 5.26981, "time": 1.02064}
{"mode": "train", "epoch": 2, "iter": 220, "lr": 0.00063, "memory": 7996, "data_time": 0.13634, "loss_cls": 0.17435, "loss_bbox": 0.05998, "loss_kps": 6.18854, "loss": 6.42287, "time": 1.00798}
{"mode": "train", "epoch": 2, "iter": 230, "lr": 0.00063, "memory": 7996, "data_time": 0.12476, "loss_cls": 0.18508, "loss_bbox": 0.06251, "loss_kps": 5.50225, "loss": 5.74984, "time": 1.01003}
{"mode": "train", "epoch": 2, "iter": 240, "lr": 0.00063, "memory": 7996, "data_time": 0.09701, "loss_cls": 0.18147, "loss_bbox": 0.06351, "loss_kps": 6.16, "loss": 6.40497, "time": 0.95454}
{"mode": "train", "epoch": 3, "iter": 10, "lr": 0.00063, "memory": 7996, "data_time": 3.15416, "loss_cls": 0.18112, "loss_bbox": 0.06269, "loss_kps": 5.63675, "loss": 5.88056, "time": 4.55069}
{"mode": "train", "epoch": 3, "iter": 20, "lr": 0.00063, "memory": 7996, "data_time": 0.13629, "loss_cls": 0.16962, "loss_bbox": 0.06444, "loss_kps": 4.89125, "loss": 5.12531, "time": 1.13405}
{"mode": "train", "epoch": 3, "iter": 30, "lr": 0.00063, "memory": 7996, "data_time": 0.14023, "loss_cls": 0.17965, "loss_bbox": 0.0673, "loss_kps": 5.55288, "loss": 5.79983, "time": 1.13397}
{"mode": "train", "epoch": 3, "iter": 40, "lr": 0.00063, "memory": 7996, "data_time": 0.12679, "loss_cls": 0.17419, "loss_bbox": 0.06569, "loss_kps": 5.69853, "loss": 5.93841, "time": 1.35045}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.00063, "memory": 7996, "data_time": 0.24748, "loss_cls": 0.18629, "loss_bbox": 0.06488, "loss_kps": 6.19117, "loss": 6.44234, "time": 1.22226}
{"mode": "train", "epoch": 3, "iter": 60, "lr": 0.00063, "memory": 7996, "data_time": 0.10614, "loss_cls": 0.17169, "loss_bbox": 0.06221, "loss_kps": 5.74428, "loss": 5.97818, "time": 0.9736}
{"mode": "train", "epoch": 3, "iter": 70, "lr": 0.00063, "memory": 7996, "data_time": 0.15374, "loss_cls": 0.19269, "loss_bbox": 0.06285, "loss_kps": 5.88257, "loss": 6.13812, "time": 1.03292}
{"mode": "train", "epoch": 3, "iter": 80, "lr": 0.00063, "memory": 7996, "data_time": 0.15551, "loss_cls": 0.1776, "loss_bbox": 0.06101, "loss_kps": 6.02811, "loss": 6.26672, "time": 1.02635}
{"mode": "train", "epoch": 3, "iter": 90, "lr": 0.00063, "memory": 7996, "data_time": 0.14488, "loss_cls": 0.17902, "loss_bbox": 0.05954, "loss_kps": 5.69224, "loss": 5.9308, "time": 1.0156}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.00063, "memory": 7996, "data_time": 0.11031, "loss_cls": 0.17345, "loss_bbox": 0.06166, "loss_kps": 6.43697, "loss": 6.67208, "time": 0.98976}
{"mode": "train", "epoch": 3, "iter": 110, "lr": 0.00063, "memory": 7996, "data_time": 0.12941, "loss_cls": 0.18064, "loss_bbox": 0.0618, "loss_kps": 5.72519, "loss": 5.96762, "time": 1.09529}
{"mode": "train", "epoch": 3, "iter": 120, "lr": 0.00063, "memory": 7996, "data_time": 0.16605, "loss_cls": 0.17891, "loss_bbox": 0.06347, "loss_kps": 6.33783, "loss": 6.58021, "time": 1.07407}
{"mode": "train", "epoch": 3, "iter": 130, "lr": 0.00063, "memory": 7996, "data_time": 0.15162, "loss_cls": 0.18515, "loss_bbox": 0.06609, "loss_kps": 5.26701, "loss": 5.51825, "time": 1.10252}
{"mode": "train", "epoch": 3, "iter": 140, "lr": 0.00063, "memory": 7996, "data_time": 0.12391, "loss_cls": 0.17563, "loss_bbox": 0.06126, "loss_kps": 4.99996, "loss": 5.23684, "time": 1.30984}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.00063, "memory": 7996, "data_time": 0.16293, "loss_cls": 0.18414, "loss_bbox": 0.06109, "loss_kps": 5.39429, "loss": 5.63953, "time": 1.16925}
{"mode": "train", "epoch": 3, "iter": 160, "lr": 0.00063, "memory": 7996, "data_time": 0.13367, "loss_cls": 0.18131, "loss_bbox": 0.06346, "loss_kps": 6.14161, "loss": 6.38638, "time": 1.07296}
{"mode": "train", "epoch": 3, "iter": 170, "lr": 0.00063, "memory": 7996, "data_time": 0.15062, "loss_cls": 0.17926, "loss_bbox": 0.05976, "loss_kps": 5.81052, "loss": 6.04954, "time": 1.0652}
{"mode": "train", "epoch": 3, "iter": 180, "lr": 0.00063, "memory": 7996, "data_time": 0.11151, "loss_cls": 0.17802, "loss_bbox": 0.06209, "loss_kps": 5.43945, "loss": 5.67957, "time": 1.10193}
{"mode": "train", "epoch": 3, "iter": 190, "lr": 0.00063, "memory": 7996, "data_time": 0.20242, "loss_cls": 0.17518, "loss_bbox": 0.06101, "loss_kps": 5.11377, "loss": 5.34996, "time": 1.46851}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.00063, "memory": 7996, "data_time": 0.13071, "loss_cls": 0.17281, "loss_bbox": 0.06062, "loss_kps": 4.66203, "loss": 4.89546, "time": 1.21947}
{"mode": "train", "epoch": 3, "iter": 210, "lr": 0.00063, "memory": 7996, "data_time": 0.14558, "loss_cls": 0.17465, "loss_bbox": 0.06149, "loss_kps": 4.64718, "loss": 4.88331, "time": 1.03338}
{"mode": "train", "epoch": 3, "iter": 220, "lr": 0.00063, "memory": 7996, "data_time": 0.12728, "loss_cls": 0.17755, "loss_bbox": 0.06306, "loss_kps": 5.3379, "loss": 5.57852, "time": 1.0046}
{"mode": "train", "epoch": 3, "iter": 230, "lr": 0.00063, "memory": 7996, "data_time": 0.13123, "loss_cls": 0.18005, "loss_bbox": 0.06338, "loss_kps": 5.28721, "loss": 5.53064, "time": 1.00942}
{"mode": "train", "epoch": 3, "iter": 240, "lr": 0.00063, "memory": 7996, "data_time": 0.1175, "loss_cls": 0.18481, "loss_bbox": 0.06157, "loss_kps": 5.91866, "loss": 6.16504, "time": 0.97118}
{"mode": "train", "epoch": 4, "iter": 10, "lr": 0.00063, "memory": 7996, "data_time": 3.09269, "loss_cls": 0.17162, "loss_bbox": 0.06146, "loss_kps": 4.78182, "loss": 5.01491, "time": 4.32223}
{"mode": "train", "epoch": 4, "iter": 20, "lr": 0.00063, "memory": 7996, "data_time": 0.09984, "loss_cls": 0.17957, "loss_bbox": 0.06519, "loss_kps": 4.9643, "loss": 5.20906, "time": 0.97503}
{"mode": "train", "epoch": 4, "iter": 30, "lr": 0.00063, "memory": 7996, "data_time": 0.12657, "loss_cls": 0.17476, "loss_bbox": 0.06264, "loss_kps": 5.17692, "loss": 5.41432, "time": 1.00699}
{"mode": "train", "epoch": 4, "iter": 40, "lr": 0.00063, "memory": 7996, "data_time": 0.13945, "loss_cls": 0.17928, "loss_bbox": 0.06212, "loss_kps": 4.65941, "loss": 4.90081, "time": 1.00525}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.00063, "memory": 7996, "data_time": 0.16281, "loss_cls": 0.18063, "loss_bbox": 0.06316, "loss_kps": 6.04725, "loss": 6.29104, "time": 1.04299}
{"mode": "train", "epoch": 4, "iter": 60, "lr": 0.00063, "memory": 7996, "data_time": 0.11464, "loss_cls": 0.16616, "loss_bbox": 0.06219, "loss_kps": 5.21629, "loss": 5.44463, "time": 1.02369}
{"mode": "train", "epoch": 4, "iter": 70, "lr": 0.00063, "memory": 7996, "data_time": 0.11831, "loss_cls": 0.18076, "loss_bbox": 0.06172, "loss_kps": 5.46795, "loss": 5.71044, "time": 1.00131}
{"mode": "train", "epoch": 4, "iter": 80, "lr": 0.00063, "memory": 7996, "data_time": 0.12378, "loss_cls": 0.18409, "loss_bbox": 0.06207, "loss_kps": 5.26968, "loss": 5.51584, "time": 1.0049}
{"mode": "train", "epoch": 4, "iter": 90, "lr": 0.00063, "memory": 7996, "data_time": 0.15134, "loss_cls": 0.17326, "loss_bbox": 0.0622, "loss_kps": 5.08252, "loss": 5.31798, "time": 1.05109}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.00063, "memory": 7996, "data_time": 0.13466, "loss_cls": 0.1783, "loss_bbox": 0.06396, "loss_kps": 4.90995, "loss": 5.15222, "time": 1.01325}
{"mode": "train", "epoch": 4, "iter": 110, "lr": 0.00063, "memory": 7996, "data_time": 0.11556, "loss_cls": 0.18394, "loss_bbox": 0.06114, "loss_kps": 4.74865, "loss": 4.99373, "time": 1.01062}
{"mode": "train", "epoch": 4, "iter": 120, "lr": 0.00063, "memory": 7996, "data_time": 0.13152, "loss_cls": 0.18221, "loss_bbox": 0.06186, "loss_kps": 6.30718, "loss": 6.55125, "time": 1.01312}
{"mode": "train", "epoch": 4, "iter": 130, "lr": 0.00063, "memory": 7996, "data_time": 0.153, "loss_cls": 0.17463, "loss_bbox": 0.06188, "loss_kps": 5.42506, "loss": 5.66157, "time": 1.03235}
{"mode": "train", "epoch": 4, "iter": 140, "lr": 0.00063, "memory": 7996, "data_time": 0.12344, "loss_cls": 0.17566, "loss_bbox": 0.06144, "loss_kps": 4.48414, "loss": 4.72123, "time": 1.04353}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.00063, "memory": 7996, "data_time": 0.11811, "loss_cls": 0.17478, "loss_bbox": 0.06062, "loss_kps": 4.9868, "loss": 5.2222, "time": 0.99924}
{"mode": "train", "epoch": 4, "iter": 160, "lr": 0.00063, "memory": 7996, "data_time": 0.12931, "loss_cls": 0.17206, "loss_bbox": 0.06171, "loss_kps": 4.50097, "loss": 4.73473, "time": 1.02402}
{"mode": "train", "epoch": 4, "iter": 170, "lr": 0.00063, "memory": 7996, "data_time": 0.14353, "loss_cls": 0.18369, "loss_bbox": 0.06575, "loss_kps": 4.88903, "loss": 5.13847, "time": 1.01468}
{"mode": "train", "epoch": 4, "iter": 180, "lr": 0.00063, "memory": 7996, "data_time": 0.12004, "loss_cls": 0.16622, "loss_bbox": 0.06434, "loss_kps": 4.5837, "loss": 4.81426, "time": 1.02712}
{"mode": "train", "epoch": 4, "iter": 190, "lr": 0.00063, "memory": 7996, "data_time": 0.12313, "loss_cls": 0.18325, "loss_bbox": 0.06107, "loss_kps": 5.34818, "loss": 5.5925, "time": 1.00046}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.00063, "memory": 7996, "data_time": 0.1342, "loss_cls": 0.18267, "loss_bbox": 0.059, "loss_kps": 4.7487, "loss": 4.99037, "time": 1.0143}
{"mode": "train", "epoch": 4, "iter": 210, "lr": 0.00063, "memory": 7996, "data_time": 0.15854, "loss_cls": 0.17462, "loss_bbox": 0.0597, "loss_kps": 4.55163, "loss": 4.78596, "time": 1.06799}
{"mode": "train", "epoch": 4, "iter": 220, "lr": 0.00063, "memory": 7996, "data_time": 0.11989, "loss_cls": 0.18412, "loss_bbox": 0.0632, "loss_kps": 4.95687, "loss": 5.20419, "time": 1.15219}
{"mode": "train", "epoch": 4, "iter": 230, "lr": 0.00063, "memory": 7996, "data_time": 0.14101, "loss_cls": 0.17303, "loss_bbox": 0.06312, "loss_kps": 4.66736, "loss": 4.90351, "time": 1.02577}
{"mode": "train", "epoch": 4, "iter": 240, "lr": 0.00063, "memory": 7996, "data_time": 0.11344, "loss_cls": 0.17249, "loss_bbox": 0.06175, "loss_kps": 6.84311, "loss": 7.07735, "time": 0.97202}
{"mode": "train", "epoch": 5, "iter": 10, "lr": 0.00063, "memory": 7996, "data_time": 3.17557, "loss_cls": 0.18183, "loss_bbox": 0.0628, "loss_kps": 5.83595, "loss": 6.08058, "time": 4.32346}
{"mode": "train", "epoch": 5, "iter": 20, "lr": 0.00063, "memory": 7996, "data_time": 0.15118, "loss_cls": 0.17986, "loss_bbox": 0.06256, "loss_kps": 5.17725, "loss": 5.41967, "time": 1.01688}
{"mode": "train", "epoch": 5, "iter": 30, "lr": 0.00063, "memory": 7996, "data_time": 0.11706, "loss_cls": 0.17756, "loss_bbox": 0.06214, "loss_kps": 5.81665, "loss": 6.05635, "time": 0.98621}
{"mode": "train", "epoch": 5, "iter": 40, "lr": 0.00063, "memory": 7996, "data_time": 0.12176, "loss_cls": 0.19024, "loss_bbox": 0.06187, "loss_kps": 4.95857, "loss": 5.21068, "time": 1.33642}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.00063, "memory": 7996, "data_time": 0.15489, "loss_cls": 0.17631, "loss_bbox": 0.06247, "loss_kps": 5.65222, "loss": 5.89099, "time": 1.20558}
{"mode": "train", "epoch": 5, "iter": 60, "lr": 0.00063, "memory": 7996, "data_time": 0.13953, "loss_cls": 0.1971, "loss_bbox": 0.06508, "loss_kps": 5.53061, "loss": 5.7928, "time": 1.00792}
{"mode": "train", "epoch": 5, "iter": 70, "lr": 0.00063, "memory": 7996, "data_time": 0.10456, "loss_cls": 0.17829, "loss_bbox": 0.06239, "loss_kps": 5.05955, "loss": 5.30023, "time": 0.99321}
{"mode": "train", "epoch": 5, "iter": 80, "lr": 0.00063, "memory": 7996, "data_time": 0.12072, "loss_cls": 0.1745, "loss_bbox": 0.06227, "loss_kps": 4.44065, "loss": 4.67742, "time": 1.02743}
{"mode": "train", "epoch": 5, "iter": 90, "lr": 0.00063, "memory": 7996, "data_time": 0.14949, "loss_cls": 0.17325, "loss_bbox": 0.06109, "loss_kps": 4.93707, "loss": 5.1714, "time": 1.03045}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.00063, "memory": 7996, "data_time": 0.14771, "loss_cls": 0.18173, "loss_bbox": 0.06334, "loss_kps": 5.06187, "loss": 5.30694, "time": 1.02174}
{"mode": "train", "epoch": 5, "iter": 110, "lr": 0.00063, "memory": 7996, "data_time": 0.11651, "loss_cls": 0.17885, "loss_bbox": 0.06093, "loss_kps": 4.85523, "loss": 5.09501, "time": 0.98561}
{"mode": "train", "epoch": 5, "iter": 120, "lr": 0.00063, "memory": 7996, "data_time": 0.12503, "loss_cls": 0.18193, "loss_bbox": 0.05906, "loss_kps": 4.87438, "loss": 5.11537, "time": 0.99765}
{"mode": "train", "epoch": 5, "iter": 130, "lr": 0.00063, "memory": 7996, "data_time": 0.13158, "loss_cls": 0.18372, "loss_bbox": 0.06271, "loss_kps": 5.43851, "loss": 5.68494, "time": 1.02522}
{"mode": "train", "epoch": 5, "iter": 140, "lr": 0.00063, "memory": 7996, "data_time": 0.16021, "loss_cls": 0.17638, "loss_bbox": 0.06198, "loss_kps": 4.83452, "loss": 5.07288, "time": 1.0604}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.00063, "memory": 7996, "data_time": 0.11114, "loss_cls": 0.1736, "loss_bbox": 0.06091, "loss_kps": 5.57028, "loss": 5.8048, "time": 0.99572}
{"mode": "train", "epoch": 5, "iter": 160, "lr": 0.00063, "memory": 7996, "data_time": 0.12337, "loss_cls": 0.16913, "loss_bbox": 0.06066, "loss_kps": 5.37418, "loss": 5.60396, "time": 0.99366}
{"mode": "train", "epoch": 5, "iter": 170, "lr": 0.00063, "memory": 7996, "data_time": 0.18553, "loss_cls": 0.18152, "loss_bbox": 0.0641, "loss_kps": 5.05187, "loss": 5.29748, "time": 1.06123}
{"mode": "train", "epoch": 5, "iter": 180, "lr": 0.00063, "memory": 7996, "data_time": 0.1367, "loss_cls": 0.17839, "loss_bbox": 0.0621, "loss_kps": 4.36386, "loss": 4.60435, "time": 1.00389}
{"mode": "train", "epoch": 5, "iter": 190, "lr": 0.00063, "memory": 7996, "data_time": 0.18342, "loss_cls": 0.18018, "loss_bbox": 0.06604, "loss_kps": 4.75238, "loss": 4.9986, "time": 1.25929}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.00063, "memory": 7996, "data_time": 0.19689, "loss_cls": 0.17789, "loss_bbox": 0.0665, "loss_kps": 4.82344, "loss": 5.06783, "time": 1.41647}
{"mode": "train", "epoch": 5, "iter": 210, "lr": 0.00063, "memory": 7996, "data_time": 0.13973, "loss_cls": 0.17797, "loss_bbox": 0.06537, "loss_kps": 6.76481, "loss": 7.00815, "time": 1.01208}
{"mode": "train", "epoch": 5, "iter": 220, "lr": 0.00063, "memory": 7996, "data_time": 0.14987, "loss_cls": 0.18812, "loss_bbox": 0.0657, "loss_kps": 6.25858, "loss": 6.5124, "time": 1.01947}
{"mode": "train", "epoch": 5, "iter": 230, "lr": 0.00063, "memory": 7996, "data_time": 0.11331, "loss_cls": 0.16964, "loss_bbox": 0.06358, "loss_kps": 4.83405, "loss": 5.06728, "time": 1.02161}
{"mode": "train", "epoch": 5, "iter": 240, "lr": 0.00063, "memory": 7996, "data_time": 0.10679, "loss_cls": 0.18098, "loss_bbox": 0.06437, "loss_kps": 5.15996, "loss": 5.40531, "time": 0.96577}
