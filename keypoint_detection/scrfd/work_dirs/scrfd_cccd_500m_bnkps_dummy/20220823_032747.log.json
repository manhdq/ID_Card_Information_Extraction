{"env_info": "sys.platform: linux\nPython: 3.9.11 (main, Mar 29 2022, 19:08:29) [GCC 7.5.0]\nCUDA available: True\nGPU 0,1: Tesla T4\nCUDA_HOME: /root/miniconda3/envs/id_card\nNVCC: Cuda compilation tools, release 11.7, V11.7.99\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.11.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0\nOpenCV: 4.6.0\nMMCV: 1.5.3\nMMCV Compiler: n/a\nMMCV CUDA Compiler: n/a\nMMDetection: 2.7.0+", "config": "optimizer = dict(type='Adam', lr=0.000625, weight_decay=0.0005)\noptimizer_config = dict(grad_clip=None)\nlr_mult = 8\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=10,\n    warmup_ratio=0.001,\n    step=[32, 48])\ntotal_epochs = 64\ncheckpoint_config = dict(interval=5)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '/home/manhdq/ID_Card_Information_Extraction/keypoint_detection/scrfd/work_dirs/scrfd_cccd_500m_bnkps_dummy/best.pth'\nresume_from = None\nworkflow = [('train', 1)]\ndataset_type = 'RetinaFaceDataset'\ndata_root = '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd'\ntrain_root = [\n    '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean_v2',\n    '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/giaosu_tien'\n]\nval_root = '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean'\nimg_norm_cfg = dict(\n    mean=[127.5, 127.5, 127.5], std=[128.0, 128.0, 128.0], to_rgb=True)\nalbu_train_transforms = [\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(\n                type='Affine',\n                scale=None,\n                rotate=(-90, 90),\n                shear=None,\n                interpolation=0,\n                fit_output=True)\n        ],\n        p=0.6),\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(type='MotionBlur'),\n            dict(type='GaussianBlur', blur_limit=3)\n        ],\n        p=0.2),\n    dict(type='ToGray', p=0.2)\n]\ntrain_pipeline = [\n    dict(type='LoadImageFromFile', to_float32=True),\n    dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n    dict(\n        type='RandomSquareCrop',\n        crop_choice=[0.3, 0.45, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0]),\n    dict(type='Resize', img_scale=(640, 640), keep_ratio=False),\n    dict(\n        type='RandomFlip',\n        flip_ratio=0.5,\n        direction=['horizontal', 'vertical', 'diagonal']),\n    dict(\n        type='PhotoMetricDistortion',\n        brightness_delta=32,\n        contrast_range=(0.5, 1.5),\n        saturation_range=(0.5, 1.5),\n        hue_delta=18),\n    dict(\n        type='Normalize',\n        mean=[127.5, 127.5, 127.5],\n        std=[128.0, 128.0, 128.0],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_keypointss'\n        ])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(640, 640),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[127.5, 127.5, 127.5],\n                std=[128.0, 128.0, 128.0],\n                to_rgb=True),\n            dict(type='Pad', size=(640, 640), pad_val=0),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=32,\n    workers_per_gpu=8,\n    train=dict(\n        type='RetinaFaceDataset',\n        ann_file=[\n            '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean_v2/annotations.txt',\n            '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/giaosu_tien/annotations.txt'\n        ],\n        img_prefix=[\n            '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean_v2/images',\n            '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/giaosu_tien/images'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile', to_float32=True),\n            dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n            dict(\n                type='RandomSquareCrop',\n                crop_choice=[\n                    0.3, 0.45, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0\n                ]),\n            dict(type='Resize', img_scale=(640, 640), keep_ratio=False),\n            dict(\n                type='RandomFlip',\n                flip_ratio=0.5,\n                direction=['horizontal', 'vertical', 'diagonal']),\n            dict(\n                type='PhotoMetricDistortion',\n                brightness_delta=32,\n                contrast_range=(0.5, 1.5),\n                saturation_range=(0.5, 1.5),\n                hue_delta=18),\n            dict(\n                type='Normalize',\n                mean=[127.5, 127.5, 127.5],\n                std=[128.0, 128.0, 128.0],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_keypointss'\n                ])\n        ]),\n    val=dict(\n        type='RetinaFaceDataset',\n        ann_file=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/annotations.txt',\n        img_prefix=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/images',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(640, 640),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[127.5, 127.5, 127.5],\n                        std=[128.0, 128.0, 128.0],\n                        to_rgb=True),\n                    dict(type='Pad', size=(640, 640), pad_val=0),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    infer=dict(\n        type='RetinaFaceDataset',\n        ann_file=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/annotations.txt',\n        img_prefix=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/images',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(640, 640),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[127.5, 127.5, 127.5],\n                        std=[128.0, 128.0, 128.0],\n                        to_rgb=True),\n                    dict(type='Pad', size=(640, 640), pad_val=0),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_keypointss'\n                        ])\n                ])\n        ]),\n    test=dict(\n        type='RetinaFaceDataset',\n        ann_file=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/annotations.txt',\n        img_prefix=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/images',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(640, 640),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[127.5, 127.5, 127.5],\n                        std=[128.0, 128.0, 128.0],\n                        to_rgb=True),\n                    dict(type='Pad', size=(640, 640), pad_val=0),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nmodel = dict(\n    type='SCRFD',\n    backbone=dict(\n        type='MobileNetV1',\n        block_cfg=dict(\n            stage_blocks=(2, 3, 2, 6), stage_planes=[16, 16, 40, 72, 152,\n                                                     288])),\n    neck=dict(\n        type='PAFPN',\n        in_channels=[40, 72, 152, 288],\n        out_channels=16,\n        start_level=1,\n        add_extra_convs='on_output',\n        num_outs=3),\n    bbox_head=dict(\n        type='SCRFDHead',\n        num_classes=1,\n        in_channels=16,\n        stacked_convs=2,\n        feat_channels=64,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        cls_reg_share=True,\n        strides_share=False,\n        dw_conv=True,\n        scale_mode=0,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            ratios=[1.0],\n            scales=[1, 2],\n            base_sizes=[16, 64, 256],\n            strides=[8, 16, 32]),\n        loss_cls=dict(\n            type='QualityFocalLoss',\n            use_sigmoid=True,\n            beta=2.0,\n            loss_weight=1.0),\n        loss_dfl=False,\n        reg_max=8,\n        loss_bbox=dict(type='DIoULoss', loss_weight=1.0),\n        use_kps=True,\n        loss_kps=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.5),\n        train_cfg=dict(\n            assigner=dict(type='ATSSAssigner', topk=9),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        test_cfg=dict(\n            nms_pre=-1,\n            min_bbox_size=0,\n            score_thr=0.02,\n            nms=dict(type='nms', iou_threshold=0.45),\n            max_per_img=-1)))\ntrain_cfg = dict(\n    assigner=dict(type='ATSSAssigner', topk=9),\n    allowed_border=-1,\n    pos_weight=-1,\n    debug=False)\nval_cfg = dict(\n    nms_pre=-1,\n    min_bbox_size=0,\n    score_thr=0.02,\n    nms=dict(type='nms', iou_threshold=0.45),\n    max_per_img=-1)\ntest_cfg = dict(\n    nms_pre=-1,\n    min_bbox_size=0,\n    score_thr=0.02,\n    nms=dict(type='nms', iou_threshold=0.45),\n    max_per_img=-1)\nepoch_multi = 1\nevaluation = dict(interval=5, metric='mAP')\nwork_dir = './work_dirs/scrfd_cccd_500m_bnkps_dummy'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "scrfd_cccd_500m_bnkps_dummy.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14695, "loss_cls": 0.5557, "loss_bbox": 0.13397, "loss_kps": 14.765, "loss": 15.45467, "time": 0.6127}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06235, "loss_cls": 0.40635, "loss_bbox": 0.11769, "loss_kps": 9.01931, "loss": 9.54335, "time": 0.51224}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.15482, "loss_cls": 0.29846, "loss_bbox": 0.0989, "loss_kps": 7.30407, "loss": 7.70143, "time": 0.60211}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06152, "loss_cls": 0.29019, "loss_bbox": 0.09722, "loss_kps": 7.23613, "loss": 7.62354, "time": 0.50967}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.15055, "loss_cls": 0.26137, "loss_bbox": 0.0852, "loss_kps": 5.76114, "loss": 6.10772, "time": 0.60552}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06248, "loss_cls": 0.24848, "loss_bbox": 0.08798, "loss_kps": 5.81845, "loss": 6.15492, "time": 0.51058}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14094, "loss_cls": 0.24675, "loss_bbox": 0.08363, "loss_kps": 6.57086, "loss": 6.90124, "time": 0.59347}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06551, "loss_cls": 0.23582, "loss_bbox": 0.07716, "loss_kps": 5.17292, "loss": 5.4859, "time": 0.51575}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14788, "loss_cls": 0.22425, "loss_bbox": 0.07772, "loss_kps": 4.58672, "loss": 4.88869, "time": 0.60672}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06005, "loss_cls": 0.21733, "loss_bbox": 0.07738, "loss_kps": 4.86922, "loss": 5.16394, "time": 0.51243}
{"mode": "val", "epoch": 5, "iter": 139, "lr": 0.00063, "mAP": 0.98429}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.13747, "loss_cls": 0.20779, "loss_bbox": 0.07185, "loss_kps": 3.80942, "loss": 4.08906, "time": 0.59086}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06415, "loss_cls": 0.22541, "loss_bbox": 0.07515, "loss_kps": 4.39863, "loss": 4.69919, "time": 0.51629}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14655, "loss_cls": 0.21662, "loss_bbox": 0.07245, "loss_kps": 4.55951, "loss": 4.84859, "time": 0.59904}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06463, "loss_cls": 0.21513, "loss_bbox": 0.07755, "loss_kps": 4.44047, "loss": 4.73315, "time": 0.51549}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.15008, "loss_cls": 0.20742, "loss_bbox": 0.06818, "loss_kps": 4.15933, "loss": 4.43494, "time": 0.60244}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.05993, "loss_cls": 0.21171, "loss_bbox": 0.07245, "loss_kps": 4.30625, "loss": 4.59041, "time": 0.50716}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.1464, "loss_cls": 0.21673, "loss_bbox": 0.07052, "loss_kps": 4.37801, "loss": 4.66526, "time": 0.60589}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.05941, "loss_cls": 0.2089, "loss_bbox": 0.07165, "loss_kps": 4.14898, "loss": 4.42952, "time": 0.51246}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14287, "loss_cls": 0.20563, "loss_bbox": 0.07341, "loss_kps": 3.76211, "loss": 4.04115, "time": 0.59594}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06482, "loss_cls": 0.20312, "loss_bbox": 0.06782, "loss_kps": 3.38134, "loss": 3.65229, "time": 0.51499}
{"mode": "val", "epoch": 10, "iter": 139, "lr": 0.00063, "mAP": 0.98461}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.148, "loss_cls": 0.19863, "loss_bbox": 0.06807, "loss_kps": 3.38602, "loss": 3.65271, "time": 0.59638}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06044, "loss_cls": 0.1998, "loss_bbox": 0.0668, "loss_kps": 3.52976, "loss": 3.79636, "time": 0.5063}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14961, "loss_cls": 0.20113, "loss_bbox": 0.06857, "loss_kps": 3.88434, "loss": 4.15405, "time": 0.60274}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06079, "loss_cls": 0.19135, "loss_bbox": 0.06918, "loss_kps": 3.82795, "loss": 4.08848, "time": 0.50734}
{"mode": "train", "epoch": 13, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14453, "loss_cls": 0.20053, "loss_bbox": 0.06776, "loss_kps": 3.6122, "loss": 3.8805, "time": 0.60017}
{"mode": "train", "epoch": 13, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06129, "loss_cls": 0.19356, "loss_bbox": 0.06629, "loss_kps": 3.26076, "loss": 3.52062, "time": 0.50981}
{"mode": "train", "epoch": 14, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14784, "loss_cls": 0.18718, "loss_bbox": 0.06004, "loss_kps": 2.81971, "loss": 3.06693, "time": 0.6009}
{"mode": "train", "epoch": 14, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06396, "loss_cls": 0.18454, "loss_bbox": 0.06731, "loss_kps": 3.54705, "loss": 3.7989, "time": 0.51757}
{"mode": "train", "epoch": 15, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14661, "loss_cls": 0.19282, "loss_bbox": 0.06054, "loss_kps": 2.98255, "loss": 3.23591, "time": 0.59479}
{"mode": "train", "epoch": 15, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06072, "loss_cls": 0.19336, "loss_bbox": 0.06686, "loss_kps": 2.97086, "loss": 3.23108, "time": 0.50352}
{"mode": "val", "epoch": 15, "iter": 139, "lr": 0.00063, "mAP": 0.98562}
{"mode": "train", "epoch": 16, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14968, "loss_cls": 0.18945, "loss_bbox": 0.06637, "loss_kps": 3.53333, "loss": 3.78914, "time": 0.60384}
{"mode": "train", "epoch": 16, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06049, "loss_cls": 0.18792, "loss_bbox": 0.06222, "loss_kps": 2.87391, "loss": 3.12406, "time": 0.51175}
{"mode": "train", "epoch": 17, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.15425, "loss_cls": 0.18476, "loss_bbox": 0.06407, "loss_kps": 3.12819, "loss": 3.37702, "time": 0.61299}
{"mode": "train", "epoch": 17, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.05916, "loss_cls": 0.18976, "loss_bbox": 0.06218, "loss_kps": 3.25823, "loss": 3.51018, "time": 0.50657}
{"mode": "train", "epoch": 18, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14703, "loss_cls": 0.17985, "loss_bbox": 0.06095, "loss_kps": 2.83303, "loss": 3.07383, "time": 0.59685}
{"mode": "train", "epoch": 18, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.05988, "loss_cls": 0.18316, "loss_bbox": 0.0648, "loss_kps": 3.23617, "loss": 3.48413, "time": 0.50653}
{"mode": "train", "epoch": 19, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.1455, "loss_cls": 0.1843, "loss_bbox": 0.06533, "loss_kps": 3.05499, "loss": 3.30462, "time": 0.5993}
{"mode": "train", "epoch": 19, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.061, "loss_cls": 0.18148, "loss_bbox": 0.06099, "loss_kps": 2.98355, "loss": 3.22603, "time": 0.51158}
{"mode": "train", "epoch": 20, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.1525, "loss_cls": 0.18714, "loss_bbox": 0.06359, "loss_kps": 3.31461, "loss": 3.56533, "time": 0.60294}
{"mode": "train", "epoch": 20, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.05554, "loss_cls": 0.1799, "loss_bbox": 0.06268, "loss_kps": 3.14388, "loss": 3.38645, "time": 0.50052}
{"mode": "val", "epoch": 20, "iter": 139, "lr": 0.00063, "mAP": 0.98539}
{"mode": "train", "epoch": 21, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.1526, "loss_cls": 0.18573, "loss_bbox": 0.06504, "loss_kps": 3.07455, "loss": 3.32532, "time": 0.60342}
{"mode": "train", "epoch": 21, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06017, "loss_cls": 0.178, "loss_bbox": 0.06164, "loss_kps": 3.28557, "loss": 3.52521, "time": 0.50824}
{"mode": "train", "epoch": 22, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14523, "loss_cls": 0.17584, "loss_bbox": 0.06262, "loss_kps": 2.88397, "loss": 3.12243, "time": 0.59558}
{"mode": "train", "epoch": 22, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.05965, "loss_cls": 0.18388, "loss_bbox": 0.06323, "loss_kps": 3.03603, "loss": 3.28314, "time": 0.511}
{"mode": "train", "epoch": 23, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.15443, "loss_cls": 0.17986, "loss_bbox": 0.06134, "loss_kps": 2.78062, "loss": 3.02182, "time": 0.60578}
{"mode": "train", "epoch": 23, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.05809, "loss_cls": 0.17555, "loss_bbox": 0.06153, "loss_kps": 3.00701, "loss": 3.2441, "time": 0.50631}
{"mode": "train", "epoch": 24, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14263, "loss_cls": 0.17586, "loss_bbox": 0.06315, "loss_kps": 3.00839, "loss": 3.2474, "time": 0.59719}
{"mode": "train", "epoch": 24, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06, "loss_cls": 0.17327, "loss_bbox": 0.05933, "loss_kps": 2.72547, "loss": 2.95808, "time": 0.50771}
{"mode": "train", "epoch": 25, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14463, "loss_cls": 0.17955, "loss_bbox": 0.06057, "loss_kps": 3.10265, "loss": 3.34277, "time": 0.59936}
{"mode": "train", "epoch": 25, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.05699, "loss_cls": 0.17949, "loss_bbox": 0.06203, "loss_kps": 2.91675, "loss": 3.15827, "time": 0.49822}
{"mode": "val", "epoch": 25, "iter": 139, "lr": 0.00063, "mAP": 0.9862}
{"mode": "train", "epoch": 26, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.14552, "loss_cls": 0.17557, "loss_bbox": 0.06478, "loss_kps": 2.92061, "loss": 3.16097, "time": 0.59989}
{"mode": "train", "epoch": 26, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06678, "loss_cls": 0.17345, "loss_bbox": 0.0583, "loss_kps": 2.94139, "loss": 3.17314, "time": 0.51912}
{"mode": "train", "epoch": 27, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.15286, "loss_cls": 0.17242, "loss_bbox": 0.06163, "loss_kps": 2.63725, "loss": 2.87129, "time": 0.6086}
{"mode": "train", "epoch": 27, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.05852, "loss_cls": 0.17709, "loss_bbox": 0.06088, "loss_kps": 2.8872, "loss": 3.12517, "time": 0.50125}
{"mode": "train", "epoch": 28, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.15454, "loss_cls": 0.1786, "loss_bbox": 0.05776, "loss_kps": 3.12188, "loss": 3.35824, "time": 0.60884}
{"mode": "train", "epoch": 28, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06072, "loss_cls": 0.17627, "loss_bbox": 0.06187, "loss_kps": 2.65019, "loss": 2.88833, "time": 0.51011}
{"mode": "train", "epoch": 29, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.15267, "loss_cls": 0.16937, "loss_bbox": 0.05907, "loss_kps": 2.51348, "loss": 2.74191, "time": 0.60695}
{"mode": "train", "epoch": 29, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.05901, "loss_cls": 0.17299, "loss_bbox": 0.05789, "loss_kps": 2.65729, "loss": 2.88818, "time": 0.50661}
{"mode": "train", "epoch": 30, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.15621, "loss_cls": 0.17208, "loss_bbox": 0.05958, "loss_kps": 2.60473, "loss": 2.83639, "time": 0.61507}
{"mode": "train", "epoch": 30, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06695, "loss_cls": 0.17206, "loss_bbox": 0.06182, "loss_kps": 2.85202, "loss": 3.0859, "time": 0.52363}
{"mode": "val", "epoch": 30, "iter": 139, "lr": 0.00063, "mAP": 0.98594}
{"mode": "train", "epoch": 31, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.1506, "loss_cls": 0.17065, "loss_bbox": 0.05638, "loss_kps": 2.55436, "loss": 2.78138, "time": 0.60246}
{"mode": "train", "epoch": 31, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.05876, "loss_cls": 0.1697, "loss_bbox": 0.05894, "loss_kps": 2.60193, "loss": 2.83058, "time": 0.50811}
{"mode": "train", "epoch": 32, "iter": 50, "lr": 0.00063, "memory": 4008, "data_time": 0.1573, "loss_cls": 0.17468, "loss_bbox": 0.05875, "loss_kps": 2.46942, "loss": 2.70285, "time": 0.61075}
{"mode": "train", "epoch": 32, "iter": 100, "lr": 0.00063, "memory": 4008, "data_time": 0.06419, "loss_cls": 0.17346, "loss_bbox": 0.06036, "loss_kps": 2.74418, "loss": 2.97799, "time": 0.51158}
{"mode": "train", "epoch": 33, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.15404, "loss_cls": 0.16447, "loss_bbox": 0.05896, "loss_kps": 2.85086, "loss": 3.07429, "time": 0.61027}
{"mode": "train", "epoch": 33, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.06349, "loss_cls": 0.16789, "loss_bbox": 0.05205, "loss_kps": 2.43815, "loss": 2.65809, "time": 0.51406}
{"mode": "train", "epoch": 34, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.15384, "loss_cls": 0.17013, "loss_bbox": 0.05572, "loss_kps": 2.32382, "loss": 2.54967, "time": 0.60974}
{"mode": "train", "epoch": 34, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.06021, "loss_cls": 0.16183, "loss_bbox": 0.05169, "loss_kps": 2.04335, "loss": 2.25688, "time": 0.50555}
{"mode": "train", "epoch": 35, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.15242, "loss_cls": 0.17004, "loss_bbox": 0.05449, "loss_kps": 2.55394, "loss": 2.77847, "time": 0.60816}
{"mode": "train", "epoch": 35, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.06144, "loss_cls": 0.16435, "loss_bbox": 0.05412, "loss_kps": 1.92904, "loss": 2.14752, "time": 0.51202}
{"mode": "val", "epoch": 35, "iter": 139, "lr": 6e-05, "mAP": 0.9865}
{"mode": "train", "epoch": 36, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.14189, "loss_cls": 0.16903, "loss_bbox": 0.05211, "loss_kps": 2.19628, "loss": 2.41743, "time": 0.59976}
{"mode": "train", "epoch": 36, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.06293, "loss_cls": 0.16386, "loss_bbox": 0.05731, "loss_kps": 2.32548, "loss": 2.54666, "time": 0.51382}
{"mode": "train", "epoch": 37, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.14879, "loss_cls": 0.16943, "loss_bbox": 0.05386, "loss_kps": 2.33425, "loss": 2.55754, "time": 0.59993}
{"mode": "train", "epoch": 37, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.0569, "loss_cls": 0.1701, "loss_bbox": 0.05391, "loss_kps": 2.23184, "loss": 2.45586, "time": 0.50712}
{"mode": "train", "epoch": 38, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.14504, "loss_cls": 0.16728, "loss_bbox": 0.05407, "loss_kps": 2.25751, "loss": 2.47886, "time": 0.59643}
{"mode": "train", "epoch": 38, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.06462, "loss_cls": 0.15894, "loss_bbox": 0.05171, "loss_kps": 1.95186, "loss": 2.16252, "time": 0.51449}
{"mode": "train", "epoch": 39, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.14645, "loss_cls": 0.16715, "loss_bbox": 0.05316, "loss_kps": 2.27172, "loss": 2.49202, "time": 0.60549}
{"mode": "train", "epoch": 39, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.0632, "loss_cls": 0.17167, "loss_bbox": 0.05503, "loss_kps": 2.15111, "loss": 2.37781, "time": 0.52089}
{"mode": "train", "epoch": 40, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.14769, "loss_cls": 0.16202, "loss_bbox": 0.05292, "loss_kps": 2.03251, "loss": 2.24745, "time": 0.5992}
{"mode": "train", "epoch": 40, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.05871, "loss_cls": 0.16669, "loss_bbox": 0.0534, "loss_kps": 2.32852, "loss": 2.54861, "time": 0.50665}
{"mode": "val", "epoch": 40, "iter": 139, "lr": 6e-05, "mAP": 0.98594}
{"mode": "train", "epoch": 41, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.15536, "loss_cls": 0.15958, "loss_bbox": 0.05376, "loss_kps": 2.20778, "loss": 2.42112, "time": 0.61091}
{"mode": "train", "epoch": 41, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.0631, "loss_cls": 0.16027, "loss_bbox": 0.05287, "loss_kps": 2.59114, "loss": 2.80428, "time": 0.51536}
{"mode": "train", "epoch": 42, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.14571, "loss_cls": 0.16782, "loss_bbox": 0.05251, "loss_kps": 2.14294, "loss": 2.36327, "time": 0.60227}
{"mode": "train", "epoch": 42, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.0632, "loss_cls": 0.16789, "loss_bbox": 0.05355, "loss_kps": 1.93995, "loss": 2.16139, "time": 0.52205}
{"mode": "train", "epoch": 43, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.1428, "loss_cls": 0.16644, "loss_bbox": 0.05281, "loss_kps": 2.00399, "loss": 2.22324, "time": 0.60005}
{"mode": "train", "epoch": 43, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.06251, "loss_cls": 0.16864, "loss_bbox": 0.0524, "loss_kps": 2.15519, "loss": 2.37623, "time": 0.51265}
{"mode": "train", "epoch": 44, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.14773, "loss_cls": 0.16367, "loss_bbox": 0.05288, "loss_kps": 2.23691, "loss": 2.45346, "time": 0.60413}
{"mode": "train", "epoch": 44, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.05577, "loss_cls": 0.16552, "loss_bbox": 0.05145, "loss_kps": 2.07809, "loss": 2.29506, "time": 0.50134}
{"mode": "train", "epoch": 45, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.15456, "loss_cls": 0.16494, "loss_bbox": 0.05156, "loss_kps": 2.14693, "loss": 2.36343, "time": 0.60911}
{"mode": "train", "epoch": 45, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.06446, "loss_cls": 0.16817, "loss_bbox": 0.05447, "loss_kps": 2.19554, "loss": 2.41818, "time": 0.5116}
{"mode": "val", "epoch": 45, "iter": 139, "lr": 6e-05, "mAP": 0.98611}
{"mode": "train", "epoch": 46, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.15309, "loss_cls": 0.16515, "loss_bbox": 0.05241, "loss_kps": 2.07508, "loss": 2.29264, "time": 0.60915}
{"mode": "train", "epoch": 46, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.06161, "loss_cls": 0.16183, "loss_bbox": 0.05261, "loss_kps": 2.06469, "loss": 2.27913, "time": 0.51107}
{"mode": "train", "epoch": 47, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.14965, "loss_cls": 0.16399, "loss_bbox": 0.05135, "loss_kps": 2.15683, "loss": 2.37218, "time": 0.60076}
{"mode": "train", "epoch": 47, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.06003, "loss_cls": 0.16177, "loss_bbox": 0.05201, "loss_kps": 2.25416, "loss": 2.46794, "time": 0.51606}
{"mode": "train", "epoch": 48, "iter": 50, "lr": 6e-05, "memory": 4008, "data_time": 0.15484, "loss_cls": 0.16588, "loss_bbox": 0.04974, "loss_kps": 1.92059, "loss": 2.13621, "time": 0.6127}
{"mode": "train", "epoch": 48, "iter": 100, "lr": 6e-05, "memory": 4008, "data_time": 0.06061, "loss_cls": 0.16447, "loss_bbox": 0.05223, "loss_kps": 1.98258, "loss": 2.19928, "time": 0.51097}
{"mode": "train", "epoch": 49, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.14197, "loss_cls": 0.16229, "loss_bbox": 0.05453, "loss_kps": 1.74309, "loss": 1.95991, "time": 0.59553}
{"mode": "train", "epoch": 49, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.06556, "loss_cls": 0.16369, "loss_bbox": 0.0519, "loss_kps": 2.0545, "loss": 2.27009, "time": 0.5166}
{"mode": "train", "epoch": 50, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.14236, "loss_cls": 0.16585, "loss_bbox": 0.05155, "loss_kps": 1.96229, "loss": 2.17969, "time": 0.59546}
{"mode": "train", "epoch": 50, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.06237, "loss_cls": 0.16814, "loss_bbox": 0.0518, "loss_kps": 1.9753, "loss": 2.19524, "time": 0.5104}
{"mode": "val", "epoch": 50, "iter": 139, "lr": 1e-05, "mAP": 0.98575}
{"mode": "train", "epoch": 51, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.15971, "loss_cls": 0.16663, "loss_bbox": 0.0541, "loss_kps": 2.04423, "loss": 2.26496, "time": 0.61336}
{"mode": "train", "epoch": 51, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.06205, "loss_cls": 0.16218, "loss_bbox": 0.0513, "loss_kps": 1.86336, "loss": 2.07685, "time": 0.5161}
{"mode": "train", "epoch": 52, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.15089, "loss_cls": 0.16277, "loss_bbox": 0.05233, "loss_kps": 1.90123, "loss": 2.11633, "time": 0.60474}
{"mode": "train", "epoch": 52, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.05844, "loss_cls": 0.16962, "loss_bbox": 0.05058, "loss_kps": 1.82957, "loss": 2.04977, "time": 0.50336}
{"mode": "train", "epoch": 53, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.14912, "loss_cls": 0.16588, "loss_bbox": 0.05509, "loss_kps": 1.9735, "loss": 2.19447, "time": 0.59797}
{"mode": "train", "epoch": 53, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.05669, "loss_cls": 0.17005, "loss_bbox": 0.04895, "loss_kps": 2.05044, "loss": 2.26945, "time": 0.49873}
{"mode": "train", "epoch": 54, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.14394, "loss_cls": 0.16001, "loss_bbox": 0.05063, "loss_kps": 1.91644, "loss": 2.12707, "time": 0.60154}
{"mode": "train", "epoch": 54, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.06383, "loss_cls": 0.17326, "loss_bbox": 0.05308, "loss_kps": 2.18012, "loss": 2.40646, "time": 0.51472}
{"mode": "train", "epoch": 55, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.14838, "loss_cls": 0.16586, "loss_bbox": 0.05264, "loss_kps": 1.8622, "loss": 2.0807, "time": 0.60466}
{"mode": "train", "epoch": 55, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.05665, "loss_cls": 0.16679, "loss_bbox": 0.04985, "loss_kps": 1.79681, "loss": 2.01345, "time": 0.50288}
{"mode": "val", "epoch": 55, "iter": 139, "lr": 1e-05, "mAP": 0.98601}
{"mode": "train", "epoch": 56, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.15785, "loss_cls": 0.16441, "loss_bbox": 0.05128, "loss_kps": 1.87335, "loss": 2.08903, "time": 0.6119}
{"mode": "train", "epoch": 56, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.05784, "loss_cls": 0.16662, "loss_bbox": 0.05275, "loss_kps": 1.92447, "loss": 2.14383, "time": 0.50348}
{"mode": "train", "epoch": 57, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.1508, "loss_cls": 0.16683, "loss_bbox": 0.05465, "loss_kps": 1.81836, "loss": 2.03984, "time": 0.60193}
{"mode": "train", "epoch": 57, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.05813, "loss_cls": 0.16341, "loss_bbox": 0.05, "loss_kps": 1.92269, "loss": 2.1361, "time": 0.50177}
{"mode": "train", "epoch": 58, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.15185, "loss_cls": 0.16167, "loss_bbox": 0.0528, "loss_kps": 1.77018, "loss": 1.98465, "time": 0.61124}
{"mode": "train", "epoch": 58, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.05889, "loss_cls": 0.16434, "loss_bbox": 0.05233, "loss_kps": 2.03693, "loss": 2.2536, "time": 0.50697}
{"mode": "train", "epoch": 59, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.14995, "loss_cls": 0.16488, "loss_bbox": 0.04972, "loss_kps": 2.16188, "loss": 2.37648, "time": 0.60663}
{"mode": "train", "epoch": 59, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.06354, "loss_cls": 0.16723, "loss_bbox": 0.05261, "loss_kps": 1.84919, "loss": 2.06903, "time": 0.51438}
{"mode": "train", "epoch": 60, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.14709, "loss_cls": 0.16373, "loss_bbox": 0.05005, "loss_kps": 2.00896, "loss": 2.22274, "time": 0.60207}
{"mode": "train", "epoch": 60, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.06413, "loss_cls": 0.1601, "loss_bbox": 0.05299, "loss_kps": 1.93808, "loss": 2.15117, "time": 0.51486}
{"mode": "val", "epoch": 60, "iter": 139, "lr": 1e-05, "mAP": 0.98548}
{"mode": "train", "epoch": 61, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.15654, "loss_cls": 0.1628, "loss_bbox": 0.05391, "loss_kps": 2.18944, "loss": 2.40615, "time": 0.61448}
{"mode": "train", "epoch": 61, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.06127, "loss_cls": 0.16824, "loss_bbox": 0.05177, "loss_kps": 1.60838, "loss": 1.82838, "time": 0.51232}
{"mode": "train", "epoch": 62, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.14503, "loss_cls": 0.16932, "loss_bbox": 0.05368, "loss_kps": 1.95178, "loss": 2.17478, "time": 0.59469}
{"mode": "train", "epoch": 62, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.06713, "loss_cls": 0.16567, "loss_bbox": 0.05117, "loss_kps": 1.99976, "loss": 2.2166, "time": 0.5238}
{"mode": "train", "epoch": 63, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.14768, "loss_cls": 0.17031, "loss_bbox": 0.05214, "loss_kps": 1.66215, "loss": 1.8846, "time": 0.60529}
{"mode": "train", "epoch": 63, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.0588, "loss_cls": 0.16443, "loss_bbox": 0.0511, "loss_kps": 2.10165, "loss": 2.31717, "time": 0.51242}
{"mode": "train", "epoch": 64, "iter": 50, "lr": 1e-05, "memory": 4008, "data_time": 0.14866, "loss_cls": 0.16354, "loss_bbox": 0.05305, "loss_kps": 1.87813, "loss": 2.09472, "time": 0.6036}
{"mode": "train", "epoch": 64, "iter": 100, "lr": 1e-05, "memory": 4008, "data_time": 0.06139, "loss_cls": 0.1593, "loss_bbox": 0.05016, "loss_kps": 2.11026, "loss": 2.31972, "time": 0.51479}
