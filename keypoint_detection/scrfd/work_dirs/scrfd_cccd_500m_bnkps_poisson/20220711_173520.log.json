{"env_info": "sys.platform: linux\nPython: 3.9.11 (main, Mar 29 2022, 19:08:29) [GCC 7.5.0]\nCUDA available: True\nGPU 0,1: Tesla T4\nCUDA_HOME: /root/miniconda3/envs/manhdq\nNVCC: Cuda compilation tools, release 11.3, V11.3.58\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.11.0+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0+cu113\nOpenCV: 4.4.0\nMMCV: 1.5.3\nMMCV Compiler: n/a\nMMCV CUDA Compiler: n/a\nMMDetection: 2.7.0+", "config": "optimizer = dict(type='Adam', lr=0.000625, weight_decay=0.0005)\noptimizer_config = dict(grad_clip=None)\nlr_mult = 8\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=10,\n    warmup_ratio=0.001,\n    step=[32, 48])\ntotal_epochs = 64\ncheckpoint_config = dict(interval=5)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '/home/manhdq/ID_Card_Information_Extraction/ckpts/keypoint_detector_weights/final_500m_kpts_weights/best.pth'\nresume_from = None\nworkflow = [('train', 1)]\ndataset_type = 'RetinaFaceDataset'\ndata_root = '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd'\ntrain_root = '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/poisson_v1'\nval_root = '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean'\nimg_norm_cfg = dict(\n    mean=[127.5, 127.5, 127.5], std=[128.0, 128.0, 128.0], to_rgb=True)\nalbu_train_transforms = [\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(\n                type='Affine',\n                scale=None,\n                rotate=(-90, 90),\n                shear=None,\n                interpolation=0,\n                fit_output=True)\n        ],\n        p=0.6),\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(type='MotionBlur'),\n            dict(type='GaussianBlur', blur_limit=3)\n        ],\n        p=0.2),\n    dict(type='ToGray', p=0.2)\n]\ntrain_pipeline = [\n    dict(type='LoadImageFromFile', to_float32=True),\n    dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n    dict(type='Resize', img_scale=(640, 640), keep_ratio=False),\n    dict(\n        type='RandomFlip',\n        flip_ratio=0.5,\n        direction=['horizontal', 'vertical', 'diagonal']),\n    dict(\n        type='PhotoMetricDistortion',\n        brightness_delta=32,\n        contrast_range=(0.5, 1.5),\n        saturation_range=(0.5, 1.5),\n        hue_delta=18),\n    dict(\n        type='Normalize',\n        mean=[127.5, 127.5, 127.5],\n        std=[128.0, 128.0, 128.0],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n            'gt_keypointss'\n        ])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(640, 640),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[127.5, 127.5, 127.5],\n                std=[128.0, 128.0, 128.0],\n                to_rgb=True),\n            dict(type='Pad', size=(640, 640), pad_val=0),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=64,\n    workers_per_gpu=8,\n    train=dict(\n        type='RetinaFaceDataset',\n        ann_file=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/poisson_v1/annotations.txt',\n        img_prefix=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/poisson_v1/images',\n        pipeline=[\n            dict(type='LoadImageFromFile', to_float32=True),\n            dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n            dict(\n                type='RandomSquareCrop',\n                crop_choice=[\n                    0.3, 0.45, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0\n                ]),\n            dict(type='Resize', img_scale=(640, 640), keep_ratio=False),\n            dict(\n                type='RandomFlip',\n                flip_ratio=0.5,\n                direction=['horizontal', 'vertical', 'diagonal']),\n            dict(\n                type='PhotoMetricDistortion',\n                brightness_delta=32,\n                contrast_range=(0.5, 1.5),\n                saturation_range=(0.5, 1.5),\n                hue_delta=18),\n            dict(\n                type='Normalize',\n                mean=[127.5, 127.5, 127.5],\n                std=[128.0, 128.0, 128.0],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',\n                    'gt_keypointss'\n                ])\n        ]),\n    val=dict(\n        type='RetinaFaceDataset',\n        ann_file=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/annotations.txt',\n        img_prefix=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/images',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(640, 640),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[127.5, 127.5, 127.5],\n                        std=[128.0, 128.0, 128.0],\n                        to_rgb=True),\n                    dict(type='Pad', size=(640, 640), pad_val=0),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    infer=dict(\n        type='RetinaFaceDataset',\n        ann_file=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/annotations.txt',\n        img_prefix=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/images',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(640, 640),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[127.5, 127.5, 127.5],\n                        std=[128.0, 128.0, 128.0],\n                        to_rgb=True),\n                    dict(type='Pad', size=(640, 640), pad_val=0),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(\n                        type='Collect',\n                        keys=[\n                            'img', 'gt_bboxes', 'gt_labels',\n                            'gt_bboxes_ignore', 'gt_keypointss'\n                        ])\n                ])\n        ]),\n    test=dict(\n        type='RetinaFaceDataset',\n        ann_file=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/annotations.txt',\n        img_prefix=\n        '/home/manhdq/ID_Card_Information_Extraction/datasets/cccd/valid_cccd_clean/images',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(640, 640),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.0),\n                    dict(\n                        type='Normalize',\n                        mean=[127.5, 127.5, 127.5],\n                        std=[128.0, 128.0, 128.0],\n                        to_rgb=True),\n                    dict(type='Pad', size=(640, 640), pad_val=0),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nmodel = dict(\n    type='SCRFD',\n    backbone=dict(\n        type='MobileNetV1',\n        block_cfg=dict(\n            stage_blocks=(2, 3, 2, 6), stage_planes=[16, 16, 40, 72, 152,\n                                                     288])),\n    neck=dict(\n        type='PAFPN',\n        in_channels=[40, 72, 152, 288],\n        out_channels=16,\n        start_level=1,\n        add_extra_convs='on_output',\n        num_outs=3),\n    bbox_head=dict(\n        type='SCRFDHead',\n        num_classes=1,\n        in_channels=16,\n        stacked_convs=2,\n        feat_channels=64,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        cls_reg_share=True,\n        strides_share=False,\n        dw_conv=True,\n        scale_mode=0,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            ratios=[1.0],\n            scales=[1, 2],\n            base_sizes=[16, 64, 256],\n            strides=[8, 16, 32]),\n        loss_cls=dict(\n            type='QualityFocalLoss',\n            use_sigmoid=True,\n            beta=2.0,\n            loss_weight=1.0),\n        loss_dfl=False,\n        reg_max=8,\n        loss_bbox=dict(type='DIoULoss', loss_weight=1.0),\n        use_kps=True,\n        loss_kps=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.5),\n        train_cfg=dict(\n            assigner=dict(type='ATSSAssigner', topk=9),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        test_cfg=dict(\n            nms_pre=-1,\n            min_bbox_size=0,\n            score_thr=0.02,\n            nms=dict(type='nms', iou_threshold=0.45),\n            max_per_img=-1)))\ntrain_cfg = dict(\n    assigner=dict(type='ATSSAssigner', topk=9),\n    allowed_border=-1,\n    pos_weight=-1,\n    debug=False)\nval_cfg = dict(\n    nms_pre=-1,\n    min_bbox_size=0,\n    score_thr=0.02,\n    nms=dict(type='nms', iou_threshold=0.45),\n    max_per_img=-1)\ntest_cfg = dict(\n    nms_pre=-1,\n    min_bbox_size=0,\n    score_thr=0.02,\n    nms=dict(type='nms', iou_threshold=0.45),\n    max_per_img=-1)\nepoch_multi = 1\nevaluation = dict(interval=5, metric='mAP')\nwork_dir = './work_dirs/scrfd_cccd_500m_bnkps_poisson'\ngpu_ids = range(0, 1)\n", "seed": 42, "exp_name": "scrfd_cccd_500m_bnkps_poisson.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.55385, "loss_cls": 0.27236, "loss_bbox": 0.09788, "loss_kps": 32.685, "loss": 33.05524, "time": 2.16392}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.18398, "loss_cls": 0.25869, "loss_bbox": 0.10651, "loss_kps": 26.00843, "loss": 26.37363, "time": 1.72796}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.18237, "loss_cls": 0.24954, "loss_bbox": 0.10357, "loss_kps": 21.86325, "loss": 22.21637, "time": 1.34403}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.20387, "loss_cls": 0.25353, "loss_bbox": 0.1057, "loss_kps": 21.02295, "loss": 21.38218, "time": 1.74001}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.57291, "loss_cls": 0.24188, "loss_bbox": 0.10008, "loss_kps": 16.19468, "loss": 16.53663, "time": 2.18719}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.16445, "loss_cls": 0.2364, "loss_bbox": 0.09773, "loss_kps": 14.60928, "loss": 14.94341, "time": 1.32596}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.21432, "loss_cls": 0.2295, "loss_bbox": 0.09546, "loss_kps": 14.00576, "loss": 14.33072, "time": 1.67107}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.1968, "loss_cls": 0.23943, "loss_bbox": 0.09217, "loss_kps": 13.28098, "loss": 13.61258, "time": 1.78709}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.4917, "loss_cls": 0.22361, "loss_bbox": 0.08981, "loss_kps": 12.43741, "loss": 12.75083, "time": 2.14022}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.1677, "loss_cls": 0.21996, "loss_bbox": 0.08825, "loss_kps": 12.61468, "loss": 12.9229, "time": 1.24378}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.17958, "loss_cls": 0.22212, "loss_bbox": 0.08907, "loss_kps": 11.8174, "loss": 12.12859, "time": 1.78561}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.20183, "loss_cls": 0.22219, "loss_bbox": 0.08651, "loss_kps": 11.63502, "loss": 11.94372, "time": 1.78502}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.54328, "loss_cls": 0.21663, "loss_bbox": 0.08435, "loss_kps": 10.82797, "loss": 11.12895, "time": 1.87776}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.19323, "loss_cls": 0.21938, "loss_bbox": 0.086, "loss_kps": 11.11253, "loss": 11.41791, "time": 1.6217}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.18739, "loss_cls": 0.21324, "loss_bbox": 0.0822, "loss_kps": 10.97604, "loss": 11.27148, "time": 1.74399}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.20975, "loss_cls": 0.21911, "loss_bbox": 0.0838, "loss_kps": 10.83498, "loss": 11.13788, "time": 1.74802}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.51586, "loss_cls": 0.20985, "loss_bbox": 0.08107, "loss_kps": 10.70622, "loss": 10.99714, "time": 1.54738}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.18752, "loss_cls": 0.20711, "loss_bbox": 0.08051, "loss_kps": 9.53839, "loss": 9.82601, "time": 1.70718}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.17602, "loss_cls": 0.2074, "loss_bbox": 0.08179, "loss_kps": 10.356, "loss": 10.6452, "time": 1.74739}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.18615, "loss_cls": 0.20893, "loss_bbox": 0.08048, "loss_kps": 9.93669, "loss": 10.22609, "time": 1.76396}
{"mode": "val", "epoch": 5, "iter": 241, "lr": 0.00063, "mAP": 0.91092}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.40281, "loss_cls": 0.2059, "loss_bbox": 0.07949, "loss_kps": 9.65577, "loss": 9.94117, "time": 1.5677}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.19334, "loss_cls": 0.20859, "loss_bbox": 0.08011, "loss_kps": 10.28501, "loss": 10.5737, "time": 1.74394}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.16701, "loss_cls": 0.20259, "loss_bbox": 0.07878, "loss_kps": 9.03838, "loss": 9.31975, "time": 1.78025}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.19583, "loss_cls": 0.20754, "loss_bbox": 0.07903, "loss_kps": 9.89848, "loss": 10.18505, "time": 1.8256}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.34687, "loss_cls": 0.20225, "loss_bbox": 0.07701, "loss_kps": 8.89648, "loss": 9.17573, "time": 1.80035}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.1653, "loss_cls": 0.20334, "loss_bbox": 0.07875, "loss_kps": 9.38569, "loss": 9.66778, "time": 1.75597}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.1897, "loss_cls": 0.20426, "loss_bbox": 0.07852, "loss_kps": 9.48881, "loss": 9.77159, "time": 1.73942}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.21343, "loss_cls": 0.20285, "loss_bbox": 0.07873, "loss_kps": 9.6492, "loss": 9.93078, "time": 1.74841}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.53766, "loss_cls": 0.20136, "loss_bbox": 0.07698, "loss_kps": 8.4838, "loss": 8.76214, "time": 2.18328}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.20629, "loss_cls": 0.21077, "loss_bbox": 0.07705, "loss_kps": 9.39839, "loss": 9.68621, "time": 1.76896}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.18788, "loss_cls": 0.20336, "loss_bbox": 0.07557, "loss_kps": 9.2328, "loss": 9.51173, "time": 1.764}
{"mode": "train", "epoch": 8, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.15315, "loss_cls": 0.1994, "loss_bbox": 0.07792, "loss_kps": 9.24797, "loss": 9.52529, "time": 1.47622}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.5331, "loss_cls": 0.20605, "loss_bbox": 0.0774, "loss_kps": 9.14038, "loss": 9.42383, "time": 2.13911}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.20351, "loss_cls": 0.1978, "loss_bbox": 0.07593, "loss_kps": 8.4749, "loss": 8.74863, "time": 1.756}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.21646, "loss_cls": 0.19533, "loss_bbox": 0.07682, "loss_kps": 8.42074, "loss": 8.69288, "time": 1.7963}
{"mode": "train", "epoch": 9, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.15223, "loss_cls": 0.20332, "loss_bbox": 0.07531, "loss_kps": 8.72042, "loss": 8.99905, "time": 1.23914}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.50867, "loss_cls": 0.20293, "loss_bbox": 0.07426, "loss_kps": 8.38639, "loss": 8.66358, "time": 2.13865}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.16474, "loss_cls": 0.202, "loss_bbox": 0.07444, "loss_kps": 8.86763, "loss": 9.14407, "time": 1.75592}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.20432, "loss_cls": 0.19973, "loss_bbox": 0.07389, "loss_kps": 8.18695, "loss": 8.46057, "time": 1.7679}
{"mode": "train", "epoch": 10, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.16302, "loss_cls": 0.19661, "loss_bbox": 0.07455, "loss_kps": 7.74424, "loss": 8.01539, "time": 1.24054}
{"mode": "val", "epoch": 10, "iter": 241, "lr": 0.00063, "mAP": 0.9148}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.485, "loss_cls": 0.19769, "loss_bbox": 0.07554, "loss_kps": 7.99665, "loss": 8.26988, "time": 2.11576}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.17306, "loss_cls": 0.19982, "loss_bbox": 0.07293, "loss_kps": 8.54921, "loss": 8.82196, "time": 1.76552}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.16582, "loss_cls": 0.1996, "loss_bbox": 0.07455, "loss_kps": 7.57155, "loss": 7.8457, "time": 1.40691}
{"mode": "train", "epoch": 11, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.18165, "loss_cls": 0.19559, "loss_bbox": 0.07501, "loss_kps": 8.57885, "loss": 8.84945, "time": 1.59946}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.53715, "loss_cls": 0.19345, "loss_bbox": 0.07386, "loss_kps": 8.40292, "loss": 8.67023, "time": 2.16246}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.19243, "loss_cls": 0.19688, "loss_bbox": 0.07502, "loss_kps": 8.58804, "loss": 8.85994, "time": 1.77217}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.15325, "loss_cls": 0.19662, "loss_bbox": 0.07161, "loss_kps": 7.41279, "loss": 7.68102, "time": 1.21969}
{"mode": "train", "epoch": 12, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.20844, "loss_cls": 0.19414, "loss_bbox": 0.07343, "loss_kps": 8.2765, "loss": 8.54407, "time": 1.87287}
{"mode": "train", "epoch": 13, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.52346, "loss_cls": 0.1937, "loss_bbox": 0.07348, "loss_kps": 7.88959, "loss": 8.15678, "time": 2.1472}
{"mode": "train", "epoch": 13, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.15839, "loss_cls": 0.19722, "loss_bbox": 0.07273, "loss_kps": 7.63958, "loss": 7.90953, "time": 1.4209}
{"mode": "train", "epoch": 13, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.16512, "loss_cls": 0.1964, "loss_bbox": 0.07393, "loss_kps": 7.69241, "loss": 7.96274, "time": 1.55113}
{"mode": "train", "epoch": 13, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.20175, "loss_cls": 0.19738, "loss_bbox": 0.07333, "loss_kps": 7.735, "loss": 8.00572, "time": 1.7678}
{"mode": "train", "epoch": 14, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.53419, "loss_cls": 0.19586, "loss_bbox": 0.07239, "loss_kps": 7.91887, "loss": 8.18712, "time": 2.19481}
{"mode": "train", "epoch": 14, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.15368, "loss_cls": 0.18891, "loss_bbox": 0.07183, "loss_kps": 7.79834, "loss": 8.05908, "time": 1.16451}
{"mode": "train", "epoch": 14, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.23774, "loss_cls": 0.19831, "loss_bbox": 0.07227, "loss_kps": 7.42769, "loss": 7.69827, "time": 1.73198}
{"mode": "train", "epoch": 14, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.1713, "loss_cls": 0.19486, "loss_bbox": 0.073, "loss_kps": 7.71451, "loss": 7.98237, "time": 1.71947}
{"mode": "train", "epoch": 15, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.55087, "loss_cls": 0.1971, "loss_bbox": 0.07156, "loss_kps": 7.52432, "loss": 7.79299, "time": 2.12981}
{"mode": "train", "epoch": 15, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.1668, "loss_cls": 0.19965, "loss_bbox": 0.07188, "loss_kps": 8.02226, "loss": 8.29379, "time": 1.26991}
{"mode": "train", "epoch": 15, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.14301, "loss_cls": 0.19246, "loss_bbox": 0.0712, "loss_kps": 7.87702, "loss": 8.14068, "time": 1.73603}
{"mode": "train", "epoch": 15, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.18345, "loss_cls": 0.19119, "loss_bbox": 0.07152, "loss_kps": 8.07337, "loss": 8.33609, "time": 1.7279}
{"mode": "val", "epoch": 15, "iter": 241, "lr": 0.00063, "mAP": 0.91275}
{"mode": "train", "epoch": 16, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.48581, "loss_cls": 0.19703, "loss_bbox": 0.07149, "loss_kps": 7.4655, "loss": 7.73401, "time": 1.76927}
{"mode": "train", "epoch": 16, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.17918, "loss_cls": 0.19919, "loss_bbox": 0.07208, "loss_kps": 7.38266, "loss": 7.65393, "time": 1.62928}
{"mode": "train", "epoch": 16, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.21077, "loss_cls": 0.1975, "loss_bbox": 0.07079, "loss_kps": 7.45817, "loss": 7.72646, "time": 1.76808}
{"mode": "train", "epoch": 16, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.20497, "loss_cls": 0.19453, "loss_bbox": 0.07148, "loss_kps": 7.66897, "loss": 7.93497, "time": 1.78117}
{"mode": "train", "epoch": 17, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.47933, "loss_cls": 0.19309, "loss_bbox": 0.07096, "loss_kps": 7.29352, "loss": 7.55757, "time": 1.5803}
{"mode": "train", "epoch": 17, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.19404, "loss_cls": 0.19399, "loss_bbox": 0.07051, "loss_kps": 7.07204, "loss": 7.33654, "time": 1.78334}
{"mode": "train", "epoch": 17, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.18177, "loss_cls": 0.18839, "loss_bbox": 0.07118, "loss_kps": 7.08306, "loss": 7.34263, "time": 1.75632}
{"mode": "train", "epoch": 17, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.18738, "loss_cls": 0.19117, "loss_bbox": 0.07101, "loss_kps": 7.4666, "loss": 7.72878, "time": 1.7716}
{"mode": "train", "epoch": 18, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.34103, "loss_cls": 0.19059, "loss_bbox": 0.0711, "loss_kps": 6.92771, "loss": 7.1894, "time": 1.71822}
{"mode": "train", "epoch": 18, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.186, "loss_cls": 0.18825, "loss_bbox": 0.07077, "loss_kps": 7.21424, "loss": 7.47326, "time": 1.75591}
{"mode": "train", "epoch": 18, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.1608, "loss_cls": 0.18836, "loss_bbox": 0.07084, "loss_kps": 7.21258, "loss": 7.47178, "time": 1.77206}
{"mode": "train", "epoch": 18, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.18142, "loss_cls": 0.19242, "loss_bbox": 0.07061, "loss_kps": 7.26381, "loss": 7.52685, "time": 1.74789}
{"mode": "train", "epoch": 19, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.41026, "loss_cls": 0.19223, "loss_bbox": 0.07035, "loss_kps": 7.16994, "loss": 7.43252, "time": 1.87715}
{"mode": "train", "epoch": 19, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.20239, "loss_cls": 0.19051, "loss_bbox": 0.06911, "loss_kps": 6.96011, "loss": 7.21973, "time": 1.76401}
{"mode": "train", "epoch": 19, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.18309, "loss_cls": 0.18969, "loss_bbox": 0.07083, "loss_kps": 6.83314, "loss": 7.09365, "time": 1.74823}
{"mode": "train", "epoch": 19, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.1946, "loss_cls": 0.18859, "loss_bbox": 0.06952, "loss_kps": 6.75122, "loss": 7.00934, "time": 1.78381}
{"mode": "train", "epoch": 20, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.56487, "loss_cls": 0.19017, "loss_bbox": 0.07006, "loss_kps": 6.95781, "loss": 7.21804, "time": 2.18905}
{"mode": "train", "epoch": 20, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.1701, "loss_cls": 0.18828, "loss_bbox": 0.07054, "loss_kps": 7.41477, "loss": 7.6736, "time": 1.72401}
{"mode": "train", "epoch": 20, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.19776, "loss_cls": 0.19265, "loss_bbox": 0.06975, "loss_kps": 6.73416, "loss": 6.99656, "time": 1.81204}
{"mode": "train", "epoch": 20, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.14729, "loss_cls": 0.1909, "loss_bbox": 0.0708, "loss_kps": 7.15161, "loss": 7.41332, "time": 1.43003}
{"mode": "val", "epoch": 20, "iter": 241, "lr": 0.00063, "mAP": 0.92647}
{"mode": "train", "epoch": 21, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.4794, "loss_cls": 0.18528, "loss_bbox": 0.06731, "loss_kps": 6.75768, "loss": 7.01027, "time": 2.13966}
{"mode": "train", "epoch": 21, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.22611, "loss_cls": 0.18889, "loss_bbox": 0.06885, "loss_kps": 6.82234, "loss": 7.08008, "time": 1.75303}
{"mode": "train", "epoch": 21, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.17451, "loss_cls": 0.18676, "loss_bbox": 0.06907, "loss_kps": 6.73896, "loss": 6.99479, "time": 1.75612}
{"mode": "train", "epoch": 21, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.17688, "loss_cls": 0.18763, "loss_bbox": 0.0691, "loss_kps": 6.64984, "loss": 6.90657, "time": 1.25188}
{"mode": "train", "epoch": 22, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.58197, "loss_cls": 0.18963, "loss_bbox": 0.06918, "loss_kps": 6.63498, "loss": 6.89379, "time": 2.17926}
{"mode": "train", "epoch": 22, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.18604, "loss_cls": 0.18705, "loss_bbox": 0.06811, "loss_kps": 6.91184, "loss": 7.167, "time": 1.71199}
{"mode": "train", "epoch": 22, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.14952, "loss_cls": 0.18189, "loss_bbox": 0.06926, "loss_kps": 6.91288, "loss": 7.16404, "time": 1.44723}
{"mode": "train", "epoch": 22, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.1802, "loss_cls": 0.19221, "loss_bbox": 0.06859, "loss_kps": 7.4583, "loss": 7.7191, "time": 1.54073}
{"mode": "train", "epoch": 23, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.54347, "loss_cls": 0.18595, "loss_bbox": 0.06868, "loss_kps": 6.58637, "loss": 6.841, "time": 2.15439}
{"mode": "train", "epoch": 23, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.17022, "loss_cls": 0.19145, "loss_bbox": 0.06889, "loss_kps": 7.1722, "loss": 7.43254, "time": 1.73209}
{"mode": "train", "epoch": 23, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.16168, "loss_cls": 0.18741, "loss_bbox": 0.06831, "loss_kps": 7.29427, "loss": 7.54999, "time": 1.24166}
{"mode": "train", "epoch": 23, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.17835, "loss_cls": 0.19345, "loss_bbox": 0.06975, "loss_kps": 7.26049, "loss": 7.52369, "time": 1.61427}
{"mode": "train", "epoch": 24, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.60446, "loss_cls": 0.19003, "loss_bbox": 0.06882, "loss_kps": 6.62214, "loss": 6.88099, "time": 2.2234}
{"mode": "train", "epoch": 24, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.20074, "loss_cls": 0.18611, "loss_bbox": 0.06795, "loss_kps": 6.92861, "loss": 7.18267, "time": 1.75033}
{"mode": "train", "epoch": 24, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.15571, "loss_cls": 0.18302, "loss_bbox": 0.06794, "loss_kps": 6.31896, "loss": 6.56992, "time": 1.24576}
{"mode": "train", "epoch": 24, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.21553, "loss_cls": 0.1833, "loss_bbox": 0.0678, "loss_kps": 6.6966, "loss": 6.9477, "time": 1.82396}
{"mode": "train", "epoch": 25, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.55115, "loss_cls": 0.18342, "loss_bbox": 0.06859, "loss_kps": 6.38839, "loss": 6.64039, "time": 2.15567}
{"mode": "train", "epoch": 25, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.14851, "loss_cls": 0.18246, "loss_bbox": 0.06953, "loss_kps": 7.07452, "loss": 7.32651, "time": 1.38194}
{"mode": "train", "epoch": 25, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.1804, "loss_cls": 0.18836, "loss_bbox": 0.06874, "loss_kps": 6.72173, "loss": 6.97883, "time": 1.57812}
{"mode": "train", "epoch": 25, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.1821, "loss_cls": 0.18949, "loss_bbox": 0.06958, "loss_kps": 6.74881, "loss": 7.00787, "time": 1.77986}
{"mode": "val", "epoch": 25, "iter": 241, "lr": 0.00063, "mAP": 0.92408}
{"mode": "train", "epoch": 26, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.50318, "loss_cls": 0.19326, "loss_bbox": 0.06916, "loss_kps": 6.54687, "loss": 6.80928, "time": 2.0904}
{"mode": "train", "epoch": 26, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.14656, "loss_cls": 0.1852, "loss_bbox": 0.06965, "loss_kps": 6.5007, "loss": 6.75555, "time": 1.26584}
{"mode": "train", "epoch": 26, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.19192, "loss_cls": 0.18457, "loss_bbox": 0.06927, "loss_kps": 6.68959, "loss": 6.94343, "time": 1.79205}
{"mode": "train", "epoch": 26, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.18198, "loss_cls": 0.18553, "loss_bbox": 0.06973, "loss_kps": 6.52438, "loss": 6.77964, "time": 1.7239}
{"mode": "train", "epoch": 27, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.49787, "loss_cls": 0.18833, "loss_bbox": 0.06845, "loss_kps": 6.54676, "loss": 6.80354, "time": 1.85627}
{"mode": "train", "epoch": 27, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.18705, "loss_cls": 0.18821, "loss_bbox": 0.06821, "loss_kps": 6.34251, "loss": 6.59893, "time": 1.59509}
{"mode": "train", "epoch": 27, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.18747, "loss_cls": 0.18839, "loss_bbox": 0.06791, "loss_kps": 6.68613, "loss": 6.94243, "time": 1.75741}
{"mode": "train", "epoch": 27, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.22399, "loss_cls": 0.18776, "loss_bbox": 0.06755, "loss_kps": 6.25409, "loss": 6.50941, "time": 1.8186}
{"mode": "train", "epoch": 28, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.4442, "loss_cls": 0.18544, "loss_bbox": 0.06702, "loss_kps": 6.42181, "loss": 6.67426, "time": 1.50972}
{"mode": "train", "epoch": 28, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.1816, "loss_cls": 0.18962, "loss_bbox": 0.06831, "loss_kps": 6.31947, "loss": 6.5774, "time": 1.69988}
{"mode": "train", "epoch": 28, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.1656, "loss_cls": 0.18425, "loss_bbox": 0.06845, "loss_kps": 6.39651, "loss": 6.6492, "time": 1.71613}
{"mode": "train", "epoch": 28, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.18502, "loss_cls": 0.18662, "loss_bbox": 0.06824, "loss_kps": 6.92712, "loss": 7.18199, "time": 1.74389}
{"mode": "train", "epoch": 29, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.48952, "loss_cls": 0.18494, "loss_bbox": 0.06941, "loss_kps": 6.39512, "loss": 6.64946, "time": 1.62063}
{"mode": "train", "epoch": 29, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.24285, "loss_cls": 0.18728, "loss_bbox": 0.06819, "loss_kps": 6.43083, "loss": 6.6863, "time": 1.79609}
{"mode": "train", "epoch": 29, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.19242, "loss_cls": 0.18537, "loss_bbox": 0.06891, "loss_kps": 6.70082, "loss": 6.9551, "time": 1.76005}
{"mode": "train", "epoch": 29, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.17524, "loss_cls": 0.18692, "loss_bbox": 0.06835, "loss_kps": 6.95634, "loss": 7.21161, "time": 1.74099}
{"mode": "train", "epoch": 30, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.34022, "loss_cls": 0.18608, "loss_bbox": 0.06666, "loss_kps": 6.15688, "loss": 6.40962, "time": 1.69874}
{"mode": "train", "epoch": 30, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.17259, "loss_cls": 0.18608, "loss_bbox": 0.06742, "loss_kps": 6.64802, "loss": 6.90152, "time": 1.75514}
{"mode": "train", "epoch": 30, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.1461, "loss_cls": 0.18407, "loss_bbox": 0.06791, "loss_kps": 6.5886, "loss": 6.84059, "time": 1.74793}
{"mode": "train", "epoch": 30, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.21121, "loss_cls": 0.18734, "loss_bbox": 0.0687, "loss_kps": 7.1342, "loss": 7.39023, "time": 1.74812}
{"mode": "val", "epoch": 30, "iter": 241, "lr": 0.00063, "mAP": 0.91003}
{"mode": "train", "epoch": 31, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.52406, "loss_cls": 0.18619, "loss_bbox": 0.06745, "loss_kps": 6.31567, "loss": 6.56931, "time": 2.15923}
{"mode": "train", "epoch": 31, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.16198, "loss_cls": 0.18506, "loss_bbox": 0.06752, "loss_kps": 6.85469, "loss": 7.10727, "time": 1.70859}
{"mode": "train", "epoch": 31, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.18031, "loss_cls": 0.18634, "loss_bbox": 0.06768, "loss_kps": 6.52418, "loss": 6.7782, "time": 1.77928}
{"mode": "train", "epoch": 31, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.1774, "loss_cls": 0.18813, "loss_bbox": 0.06763, "loss_kps": 6.42087, "loss": 6.67663, "time": 1.55098}
{"mode": "train", "epoch": 32, "iter": 50, "lr": 0.00063, "memory": 7994, "data_time": 0.52679, "loss_cls": 0.18731, "loss_bbox": 0.06759, "loss_kps": 6.37873, "loss": 6.63362, "time": 2.1856}
{"mode": "train", "epoch": 32, "iter": 100, "lr": 0.00063, "memory": 7994, "data_time": 0.18631, "loss_cls": 0.18414, "loss_bbox": 0.06742, "loss_kps": 6.29395, "loss": 6.54551, "time": 1.78784}
{"mode": "train", "epoch": 32, "iter": 150, "lr": 0.00063, "memory": 7994, "data_time": 0.19046, "loss_cls": 0.1854, "loss_bbox": 0.06776, "loss_kps": 6.4887, "loss": 6.74186, "time": 1.77175}
{"mode": "train", "epoch": 32, "iter": 200, "lr": 0.00063, "memory": 7994, "data_time": 0.17463, "loss_cls": 0.18697, "loss_bbox": 0.06807, "loss_kps": 6.44615, "loss": 6.7012, "time": 1.24271}
{"mode": "train", "epoch": 33, "iter": 50, "lr": 6e-05, "memory": 7994, "data_time": 0.54308, "loss_cls": 0.18599, "loss_bbox": 0.06551, "loss_kps": 5.92711, "loss": 6.17861, "time": 2.15433}
{"mode": "train", "epoch": 33, "iter": 100, "lr": 6e-05, "memory": 7994, "data_time": 0.20078, "loss_cls": 0.18861, "loss_bbox": 0.06527, "loss_kps": 6.12121, "loss": 6.37509, "time": 1.73185}
{"mode": "train", "epoch": 33, "iter": 150, "lr": 6e-05, "memory": 7994, "data_time": 0.19241, "loss_cls": 0.18286, "loss_bbox": 0.06553, "loss_kps": 5.85699, "loss": 6.10538, "time": 1.7955}
{"mode": "train", "epoch": 33, "iter": 200, "lr": 6e-05, "memory": 7994, "data_time": 0.15569, "loss_cls": 0.18365, "loss_bbox": 0.06437, "loss_kps": 6.09706, "loss": 6.34508, "time": 1.27337}
{"mode": "train", "epoch": 34, "iter": 50, "lr": 6e-05, "memory": 7994, "data_time": 0.58848, "loss_cls": 0.18793, "loss_bbox": 0.06496, "loss_kps": 5.98284, "loss": 6.23572, "time": 2.1925}
{"mode": "train", "epoch": 34, "iter": 100, "lr": 6e-05, "memory": 7994, "data_time": 0.17062, "loss_cls": 0.18264, "loss_bbox": 0.06387, "loss_kps": 6.07731, "loss": 6.32382, "time": 1.77187}
{"mode": "train", "epoch": 34, "iter": 150, "lr": 6e-05, "memory": 7994, "data_time": 0.16935, "loss_cls": 0.18007, "loss_bbox": 0.06332, "loss_kps": 6.0333, "loss": 6.27669, "time": 1.39153}
{"mode": "train", "epoch": 34, "iter": 200, "lr": 6e-05, "memory": 7994, "data_time": 0.18592, "loss_cls": 0.18072, "loss_bbox": 0.06374, "loss_kps": 5.76418, "loss": 6.00865, "time": 1.58861}
{"mode": "train", "epoch": 35, "iter": 50, "lr": 6e-05, "memory": 7994, "data_time": 0.50387, "loss_cls": 0.17998, "loss_bbox": 0.06324, "loss_kps": 5.49723, "loss": 5.74045, "time": 2.09584}
{"mode": "train", "epoch": 35, "iter": 100, "lr": 6e-05, "memory": 7994, "data_time": 0.20325, "loss_cls": 0.18208, "loss_bbox": 0.06358, "loss_kps": 5.807, "loss": 6.05267, "time": 1.77922}
{"mode": "train", "epoch": 35, "iter": 150, "lr": 6e-05, "memory": 7994, "data_time": 0.16279, "loss_cls": 0.18659, "loss_bbox": 0.06358, "loss_kps": 5.55532, "loss": 5.8055, "time": 1.20048}
{"mode": "train", "epoch": 35, "iter": 200, "lr": 6e-05, "memory": 7994, "data_time": 0.19711, "loss_cls": 0.18445, "loss_bbox": 0.06319, "loss_kps": 6.24394, "loss": 6.49159, "time": 1.79628}
