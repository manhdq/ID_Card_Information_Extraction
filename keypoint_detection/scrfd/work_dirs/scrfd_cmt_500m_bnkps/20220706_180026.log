2022-07-06 18:00:26,848 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.9.11 (main, Mar 29 2022, 19:08:29) [GCC 7.5.0]
CUDA available: True
GPU 0,1: Tesla T4
CUDA_HOME: /root/miniconda3/envs/manhdq
NVCC: Cuda compilation tools, release 11.3, V11.3.58
GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
PyTorch: 1.11.0+cu113
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.12.0+cu113
OpenCV: 4.4.0
MMCV: 1.5.3
MMCV Compiler: n/a
MMCV CUDA Compiler: n/a
MMDetection: 2.7.0+
------------------------------------------------------------

2022-07-06 18:00:27,721 - mmdet - INFO - Distributed training: False
2022-07-06 18:00:28,509 - mmdet - INFO - Config:
optimizer = dict(type='Adam', lr=0.000625, weight_decay=0.0005)
optimizer_config = dict(grad_clip=None)
lr_mult = 8
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=10,
    warmup_ratio=0.001,
    step=[16, 48])
total_epochs = 64
checkpoint_config = dict(interval=5)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/manhdq/ID_Card_Information_Extraction/keypoint_detection/scrfd/work_dirs/scrfd_500m_bnkps/epoch_64.pth'
resume_from = None
workflow = [('train', 1)]
dataset_type = 'RetinaFaceDataset'
data_root = '/home/manhdq/ID_Card_Information_Extraction/datasets'
train_root = '/home/manhdq/ID_Card_Information_Extraction/datasets/poisson_color'
val_root = '/home/manhdq/ID_Card_Information_Extraction/datasets/cmt_valid'
img_norm_cfg = dict(
    mean=[127.5, 127.5, 127.5], std=[128.0, 128.0, 128.0], to_rgb=True)
albu_train_transforms = [
    dict(
        type='OneOf',
        transforms=[
            dict(
                type='Affine',
                scale=None,
                rotate=(-90, 90),
                shear=None,
                interpolation=0,
                fit_output=True)
        ],
        p=0.6),
    dict(
        type='OneOf',
        transforms=[
            dict(type='MotionBlur'),
            dict(type='GaussianBlur', blur_limit=3)
        ],
        p=0.2),
    dict(type='ToGray', p=0.2)
]
train_pipeline = [
    dict(type='LoadImageFromFile', to_float32=True),
    dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),
    dict(
        type='RandomSquareCrop',
        crop_choice=[0.3, 0.45, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0]),
    dict(type='Resize', img_scale=(640, 640), keep_ratio=False),
    dict(
        type='RandomFlip',
        flip_ratio=0.5,
        direction=['horizontal', 'vertical', 'diagonal']),
    dict(
        type='PhotoMetricDistortion',
        brightness_delta=32,
        contrast_range=(0.5, 1.5),
        saturation_range=(0.5, 1.5),
        hue_delta=18),
    dict(
        type='Normalize',
        mean=[127.5, 127.5, 127.5],
        std=[128.0, 128.0, 128.0],
        to_rgb=True),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=[
            'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',
            'gt_keypointss'
        ])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(640, 640),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.0),
            dict(
                type='Normalize',
                mean=[127.5, 127.5, 127.5],
                std=[128.0, 128.0, 128.0],
                to_rgb=True),
            dict(type='Pad', size=(640, 640), pad_val=0),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=16,
    workers_per_gpu=8,
    train=dict(
        type='RetinaFaceDataset',
        ann_file=
        '/home/manhdq/ID_Card_Information_Extraction/datasets/poisson_color/annotations.txt',
        img_prefix=
        '/home/manhdq/ID_Card_Information_Extraction/datasets/poisson_color/images',
        pipeline=[
            dict(type='LoadImageFromFile', to_float32=True),
            dict(type='LoadAnnotations', with_bbox=True, with_keypoints=True),
            dict(
                type='Albu',
                transforms=[
                    dict(
                        type='OneOf',
                        transforms=[
                            dict(
                                type='Affine',
                                scale=None,
                                rotate=(-90, 90),
                                shear=None,
                                interpolation=0,
                                fit_output=True)
                        ],
                        p=0.6),
                    dict(
                        type='OneOf',
                        transforms=[
                            dict(type='MotionBlur'),
                            dict(type='GaussianBlur', blur_limit=3)
                        ],
                        p=0.2),
                    dict(type='ToGray', p=0.2)
                ],
                bbox_params=dict(
                    type='BboxParams',
                    format='pascal_voc',
                    label_fields=['gt_labels'],
                    min_visibility=0.5),
                keypoint_params=dict(type='KeypointParams', format='xy'),
                refine_bbox_from_keypoint=True,
                keymap=dict(
                    img='image', gt_bboxes='bboxes',
                    gt_keypointss='keypoints'),
                update_pad_shape=False,
                skip_img_without_anno=True),
            dict(
                type='RandomSquareCrop',
                crop_choice=[
                    0.3, 0.45, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0
                ]),
            dict(type='Resize', img_scale=(640, 640), keep_ratio=False),
            dict(
                type='RandomFlip',
                flip_ratio=0.5,
                direction=['horizontal', 'vertical', 'diagonal']),
            dict(
                type='PhotoMetricDistortion',
                brightness_delta=32,
                contrast_range=(0.5, 1.5),
                saturation_range=(0.5, 1.5),
                hue_delta=18),
            dict(
                type='Normalize',
                mean=[127.5, 127.5, 127.5],
                std=[128.0, 128.0, 128.0],
                to_rgb=True),
            dict(type='DefaultFormatBundle'),
            dict(
                type='Collect',
                keys=[
                    'img', 'gt_bboxes', 'gt_labels', 'gt_bboxes_ignore',
                    'gt_keypointss'
                ])
        ]),
    val=dict(
        type='RetinaFaceDataset',
        ann_file=
        '/home/manhdq/ID_Card_Information_Extraction/datasets/cmt_valid/annotations.txt',
        img_prefix=
        '/home/manhdq/ID_Card_Information_Extraction/datasets/cmt_valid/images',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(640, 640),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip', flip_ratio=0.0),
                    dict(
                        type='Normalize',
                        mean=[127.5, 127.5, 127.5],
                        std=[128.0, 128.0, 128.0],
                        to_rgb=True),
                    dict(type='Pad', size=(640, 640), pad_val=0),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='RetinaFaceDataset',
        ann_file=
        '/home/manhdq/ID_Card_Information_Extraction/datasets/cmt_valid/annotations.txt',
        img_prefix=
        '/home/manhdq/ID_Card_Information_Extraction/datasets/cmt_valid/images',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(640, 640),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip', flip_ratio=0.0),
                    dict(
                        type='Normalize',
                        mean=[127.5, 127.5, 127.5],
                        std=[128.0, 128.0, 128.0],
                        to_rgb=True),
                    dict(type='Pad', size=(640, 640), pad_val=0),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
model = dict(
    type='SCRFD',
    backbone=dict(
        type='MobileNetV1',
        block_cfg=dict(
            stage_blocks=(2, 3, 2, 6), stage_planes=[16, 16, 40, 72, 152,
                                                     288])),
    neck=dict(
        type='PAFPN',
        in_channels=[40, 72, 152, 288],
        out_channels=16,
        start_level=1,
        add_extra_convs='on_output',
        num_outs=3),
    bbox_head=dict(
        type='SCRFDHead',
        num_classes=1,
        in_channels=16,
        stacked_convs=2,
        feat_channels=64,
        norm_cfg=dict(type='BN', requires_grad=True),
        cls_reg_share=True,
        strides_share=False,
        dw_conv=True,
        scale_mode=0,
        anchor_generator=dict(
            type='AnchorGenerator',
            ratios=[1.0],
            scales=[1, 2],
            base_sizes=[16, 64, 256],
            strides=[8, 16, 32]),
        loss_cls=dict(
            type='QualityFocalLoss',
            use_sigmoid=True,
            beta=2.0,
            loss_weight=1.0),
        loss_dfl=False,
        reg_max=8,
        loss_bbox=dict(type='DIoULoss', loss_weight=1.0),
        use_kps=True,
        loss_kps=dict(
            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.5),
        train_cfg=dict(
            assigner=dict(type='ATSSAssigner', topk=9),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        test_cfg=dict(
            nms_pre=-1,
            min_bbox_size=0,
            score_thr=0.02,
            nms=dict(type='nms', iou_threshold=0.45),
            max_per_img=-1)))
train_cfg = dict(
    assigner=dict(type='ATSSAssigner', topk=9),
    allowed_border=-1,
    pos_weight=-1,
    debug=False)
test_cfg = dict(
    nms_pre=-1,
    min_bbox_size=0,
    score_thr=0.02,
    nms=dict(type='nms', iou_threshold=0.45),
    max_per_img=-1)
epoch_multi = 1
evaluation = dict(interval=5, metric='mAP')
work_dir = './work_dirs/scrfd_cmt_500m_bnkps'
gpu_ids = range(0, 1)

2022-07-06 18:00:28,510 - mmdet - INFO - Set random seed to 42, deterministic: False
2022-07-06 18:00:32,544 - mmdet - INFO - load checkpoint from local path: /home/manhdq/ID_Card_Information_Extraction/keypoint_detection/scrfd/work_dirs/scrfd_500m_bnkps/epoch_64.pth
2022-07-06 18:00:32,588 - mmdet - INFO - Start running, host: root@ATMA-Ubuntu20-ARP-v3, work_dir: /home/manhdq/ID_Card_Information_Extraction/keypoint_detection/scrfd/work_dirs/scrfd_cmt_500m_bnkps
2022-07-06 18:00:32,588 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2022-07-06 18:00:32,589 - mmdet - INFO - workflow: [('train', 1)], max: 64 epochs
2022-07-06 18:00:32,589 - mmdet - INFO - Checkpoints will be saved to /home/manhdq/ID_Card_Information_Extraction/keypoint_detection/scrfd/work_dirs/scrfd_cmt_500m_bnkps by HardDiskBackend.
2022-07-06 18:00:50,552 - mmdet - INFO - Epoch [1][50/1312]	lr: 6.250e-04, eta: 8:22:25, time: 0.359, data_time: 0.115, memory: 2017, loss_cls: 0.3380, loss_bbox: 0.1479, loss_kps: 7.2812, loss: 7.7671
2022-07-06 18:01:04,104 - mmdet - INFO - Epoch [1][100/1312]	lr: 6.250e-04, eta: 7:20:28, time: 0.271, data_time: 0.033, memory: 2017, loss_cls: 0.3415, loss_bbox: 0.1542, loss_kps: 7.8389, loss: 8.3346
2022-07-06 18:01:17,737 - mmdet - INFO - Epoch [1][150/1312]	lr: 6.250e-04, eta: 7:00:26, time: 0.273, data_time: 0.034, memory: 2017, loss_cls: 0.3277, loss_bbox: 0.1523, loss_kps: 7.4532, loss: 7.9331
2022-07-06 18:01:31,404 - mmdet - INFO - Epoch [1][200/1312]	lr: 6.250e-04, eta: 6:50:32, time: 0.273, data_time: 0.035, memory: 2017, loss_cls: 0.3352, loss_bbox: 0.1556, loss_kps: 7.9498, loss: 8.4406
2022-07-06 18:01:45,102 - mmdet - INFO - Epoch [1][250/1312]	lr: 6.250e-04, eta: 6:44:40, time: 0.274, data_time: 0.036, memory: 2017, loss_cls: 0.3492, loss_bbox: 0.1511, loss_kps: 7.1756, loss: 7.6760
2022-07-06 18:01:58,468 - mmdet - INFO - Epoch [1][300/1312]	lr: 6.250e-04, eta: 6:39:09, time: 0.267, data_time: 0.034, memory: 2017, loss_cls: 0.3381, loss_bbox: 0.1467, loss_kps: 6.9145, loss: 7.3993
2022-07-06 18:02:12,190 - mmdet - INFO - Epoch [1][350/1312]	lr: 6.250e-04, eta: 6:36:33, time: 0.274, data_time: 0.035, memory: 2017, loss_cls: 0.3251, loss_bbox: 0.1509, loss_kps: 7.5675, loss: 8.0435
2022-07-06 18:02:25,809 - mmdet - INFO - Epoch [1][400/1312]	lr: 6.250e-04, eta: 6:34:12, time: 0.272, data_time: 0.035, memory: 2017, loss_cls: 0.3277, loss_bbox: 0.1434, loss_kps: 6.5302, loss: 7.0013
2022-07-06 18:02:39,851 - mmdet - INFO - Epoch [1][450/1312]	lr: 6.250e-04, eta: 6:33:37, time: 0.281, data_time: 0.038, memory: 2017, loss_cls: 0.3267, loss_bbox: 0.1461, loss_kps: 7.8179, loss: 8.2908
2022-07-06 18:02:53,915 - mmdet - INFO - Epoch [1][500/1312]	lr: 6.250e-04, eta: 6:33:11, time: 0.281, data_time: 0.037, memory: 2017, loss_cls: 0.3504, loss_bbox: 0.1497, loss_kps: 8.4280, loss: 8.9282
2022-07-06 18:03:07,930 - mmdet - INFO - Epoch [1][550/1312]	lr: 6.250e-04, eta: 6:32:39, time: 0.280, data_time: 0.037, memory: 2017, loss_cls: 0.3439, loss_bbox: 0.1502, loss_kps: 7.3798, loss: 7.8739
2022-07-06 18:03:21,807 - mmdet - INFO - Epoch [1][600/1312]	lr: 6.250e-04, eta: 6:31:50, time: 0.278, data_time: 0.036, memory: 2017, loss_cls: 0.3561, loss_bbox: 0.1568, loss_kps: 7.7956, loss: 8.3085
2022-07-06 18:03:35,741 - mmdet - INFO - Epoch [1][650/1312]	lr: 6.250e-04, eta: 6:31:15, time: 0.279, data_time: 0.039, memory: 2017, loss_cls: 0.3622, loss_bbox: 0.1528, loss_kps: 8.3641, loss: 8.8791
2022-07-06 18:03:49,468 - mmdet - INFO - Epoch [1][700/1312]	lr: 6.250e-04, eta: 6:30:18, time: 0.275, data_time: 0.036, memory: 2017, loss_cls: 0.3466, loss_bbox: 0.1488, loss_kps: 8.0375, loss: 8.5329
2022-07-06 18:04:03,434 - mmdet - INFO - Epoch [1][750/1312]	lr: 6.250e-04, eta: 6:29:53, time: 0.279, data_time: 0.039, memory: 2017, loss_cls: 0.3591, loss_bbox: 0.1524, loss_kps: 8.2571, loss: 8.7685
2022-07-06 18:04:17,088 - mmdet - INFO - Epoch [1][800/1312]	lr: 6.250e-04, eta: 6:28:57, time: 0.273, data_time: 0.034, memory: 2017, loss_cls: 0.3459, loss_bbox: 0.1516, loss_kps: 7.3499, loss: 7.8473
2022-07-06 18:04:30,881 - mmdet - INFO - Epoch [1][850/1312]	lr: 6.250e-04, eta: 6:28:20, time: 0.276, data_time: 0.036, memory: 2017, loss_cls: 0.3431, loss_bbox: 0.1523, loss_kps: 7.5436, loss: 8.0390
2022-07-06 18:04:44,800 - mmdet - INFO - Epoch [1][900/1312]	lr: 6.250e-04, eta: 6:27:57, time: 0.278, data_time: 0.036, memory: 2017, loss_cls: 0.3589, loss_bbox: 0.1533, loss_kps: 7.6790, loss: 8.1912
2022-07-06 18:04:58,810 - mmdet - INFO - Epoch [1][950/1312]	lr: 6.250e-04, eta: 6:27:43, time: 0.280, data_time: 0.038, memory: 2017, loss_cls: 0.3486, loss_bbox: 0.1444, loss_kps: 6.5050, loss: 6.9980
2022-07-06 18:05:12,705 - mmdet - INFO - Exp name: scrfd_cmt_500m_bnkps.py
2022-07-06 18:05:12,705 - mmdet - INFO - Epoch [1][1000/1312]	lr: 6.250e-04, eta: 6:27:19, time: 0.278, data_time: 0.036, memory: 2017, loss_cls: 0.3502, loss_bbox: 0.1508, loss_kps: 7.9308, loss: 8.4318
2022-07-06 18:05:26,438 - mmdet - INFO - Epoch [1][1050/1312]	lr: 6.250e-04, eta: 6:26:43, time: 0.275, data_time: 0.034, memory: 2017, loss_cls: 0.3353, loss_bbox: 0.1505, loss_kps: 6.7565, loss: 7.2422
2022-07-06 18:05:40,119 - mmdet - INFO - Epoch [1][1100/1312]	lr: 6.250e-04, eta: 6:26:06, time: 0.274, data_time: 0.035, memory: 2017, loss_cls: 0.3423, loss_bbox: 0.1504, loss_kps: 6.9713, loss: 7.4639
2022-07-06 18:05:54,224 - mmdet - INFO - Epoch [1][1150/1312]	lr: 6.250e-04, eta: 6:26:01, time: 0.282, data_time: 0.038, memory: 2017, loss_cls: 0.3447, loss_bbox: 0.1497, loss_kps: 7.5038, loss: 7.9981
2022-07-06 18:06:08,048 - mmdet - INFO - Epoch [1][1200/1312]	lr: 6.250e-04, eta: 6:25:36, time: 0.276, data_time: 0.034, memory: 2017, loss_cls: 0.3435, loss_bbox: 0.1562, loss_kps: 7.3045, loss: 7.8042
2022-07-06 18:06:22,085 - mmdet - INFO - Epoch [1][1250/1312]	lr: 6.250e-04, eta: 6:25:26, time: 0.281, data_time: 0.036, memory: 2017, loss_cls: 0.3427, loss_bbox: 0.1537, loss_kps: 7.4825, loss: 7.9789
2022-07-06 18:06:35,995 - mmdet - INFO - Epoch [1][1300/1312]	lr: 6.250e-04, eta: 6:25:08, time: 0.278, data_time: 0.038, memory: 2017, loss_cls: 0.3424, loss_bbox: 0.1497, loss_kps: 7.0567, loss: 7.5488
2022-07-06 18:06:57,218 - mmdet - INFO - Epoch [2][50/1312]	lr: 6.250e-04, eta: 6:25:37, time: 0.362, data_time: 0.116, memory: 2017, loss_cls: 0.3525, loss_bbox: 0.1531, loss_kps: 7.6393, loss: 8.1450
2022-07-06 18:07:11,113 - mmdet - INFO - Epoch [2][100/1312]	lr: 6.250e-04, eta: 6:25:17, time: 0.278, data_time: 0.035, memory: 2017, loss_cls: 0.3577, loss_bbox: 0.1500, loss_kps: 7.6253, loss: 8.1330
2022-07-06 18:07:25,126 - mmdet - INFO - Epoch [2][150/1312]	lr: 6.250e-04, eta: 6:25:03, time: 0.280, data_time: 0.037, memory: 2017, loss_cls: 0.3334, loss_bbox: 0.1495, loss_kps: 6.5587, loss: 7.0415
2022-07-06 18:07:38,880 - mmdet - INFO - Epoch [2][200/1312]	lr: 6.250e-04, eta: 6:24:36, time: 0.275, data_time: 0.036, memory: 2017, loss_cls: 0.3404, loss_bbox: 0.1483, loss_kps: 6.6226, loss: 7.1112
2022-07-06 18:07:52,941 - mmdet - INFO - Epoch [2][250/1312]	lr: 6.250e-04, eta: 6:24:26, time: 0.281, data_time: 0.038, memory: 2017, loss_cls: 0.3554, loss_bbox: 0.1492, loss_kps: 7.6237, loss: 8.1283
2022-07-06 18:08:06,830 - mmdet - INFO - Epoch [2][300/1312]	lr: 6.250e-04, eta: 6:24:06, time: 0.278, data_time: 0.035, memory: 2017, loss_cls: 0.3616, loss_bbox: 0.1452, loss_kps: 7.5141, loss: 8.0208
2022-07-06 18:08:20,854 - mmdet - INFO - Epoch [2][350/1312]	lr: 6.250e-04, eta: 6:23:54, time: 0.280, data_time: 0.037, memory: 2017, loss_cls: 0.3523, loss_bbox: 0.1504, loss_kps: 7.2437, loss: 7.7464
2022-07-06 18:08:34,875 - mmdet - INFO - Epoch [2][400/1312]	lr: 6.250e-04, eta: 6:23:41, time: 0.280, data_time: 0.037, memory: 2017, loss_cls: 0.3595, loss_bbox: 0.1527, loss_kps: 7.1979, loss: 7.7100
2022-07-06 18:08:49,083 - mmdet - INFO - Epoch [2][450/1312]	lr: 6.250e-04, eta: 6:23:37, time: 0.284, data_time: 0.038, memory: 2017, loss_cls: 0.3379, loss_bbox: 0.1485, loss_kps: 6.6880, loss: 7.1744
2022-07-06 18:09:03,013 - mmdet - INFO - Epoch [2][500/1312]	lr: 6.250e-04, eta: 6:23:20, time: 0.279, data_time: 0.036, memory: 2017, loss_cls: 0.3520, loss_bbox: 0.1467, loss_kps: 7.3163, loss: 7.8150
2022-07-06 18:09:16,998 - mmdet - INFO - Epoch [2][550/1312]	lr: 6.250e-04, eta: 6:23:05, time: 0.280, data_time: 0.036, memory: 2017, loss_cls: 0.3507, loss_bbox: 0.1502, loss_kps: 7.4026, loss: 7.9035
2022-07-06 18:09:30,918 - mmdet - INFO - Epoch [2][600/1312]	lr: 6.250e-04, eta: 6:22:48, time: 0.278, data_time: 0.037, memory: 2017, loss_cls: 0.3341, loss_bbox: 0.1504, loss_kps: 6.8298, loss: 7.3143
2022-07-06 18:09:44,978 - mmdet - INFO - Epoch [2][650/1312]	lr: 6.250e-04, eta: 6:22:36, time: 0.281, data_time: 0.038, memory: 2017, loss_cls: 0.3322, loss_bbox: 0.1493, loss_kps: 6.4931, loss: 6.9745
2022-07-06 18:09:59,209 - mmdet - INFO - Epoch [2][700/1312]	lr: 6.250e-04, eta: 6:22:32, time: 0.285, data_time: 0.039, memory: 2017, loss_cls: 0.3502, loss_bbox: 0.1470, loss_kps: 7.7084, loss: 8.2055
2022-07-06 18:10:13,516 - mmdet - INFO - Epoch [2][750/1312]	lr: 6.250e-04, eta: 6:22:30, time: 0.286, data_time: 0.039, memory: 2017, loss_cls: 0.3511, loss_bbox: 0.1536, loss_kps: 6.8855, loss: 7.3902
2022-07-06 18:10:27,576 - mmdet - INFO - Epoch [2][800/1312]	lr: 6.250e-04, eta: 6:22:18, time: 0.281, data_time: 0.037, memory: 2017, loss_cls: 0.3568, loss_bbox: 0.1447, loss_kps: 6.6657, loss: 7.1672
2022-07-06 18:10:41,790 - mmdet - INFO - Epoch [2][850/1312]	lr: 6.250e-04, eta: 6:22:12, time: 0.284, data_time: 0.038, memory: 2017, loss_cls: 0.3254, loss_bbox: 0.1479, loss_kps: 6.7392, loss: 7.2125
2022-07-06 18:10:55,866 - mmdet - INFO - Epoch [2][900/1312]	lr: 6.250e-04, eta: 6:22:00, time: 0.282, data_time: 0.038, memory: 2017, loss_cls: 0.3625, loss_bbox: 0.1493, loss_kps: 7.6329, loss: 8.1447
2022-07-06 18:11:09,965 - mmdet - INFO - Epoch [2][950/1312]	lr: 6.250e-04, eta: 6:21:49, time: 0.282, data_time: 0.038, memory: 2017, loss_cls: 0.3522, loss_bbox: 0.1514, loss_kps: 7.1954, loss: 7.6991
2022-07-06 18:11:24,247 - mmdet - INFO - Epoch [2][1000/1312]	lr: 6.250e-04, eta: 6:21:44, time: 0.286, data_time: 0.039, memory: 2017, loss_cls: 0.3479, loss_bbox: 0.1466, loss_kps: 7.0077, loss: 7.5022
2022-07-06 18:11:38,333 - mmdet - INFO - Epoch [2][1050/1312]	lr: 6.250e-04, eta: 6:21:32, time: 0.282, data_time: 0.038, memory: 2017, loss_cls: 0.3491, loss_bbox: 0.1483, loss_kps: 7.3585, loss: 7.8559
2022-07-06 18:11:52,556 - mmdet - INFO - Epoch [2][1100/1312]	lr: 6.250e-04, eta: 6:21:25, time: 0.284, data_time: 0.039, memory: 2017, loss_cls: 0.3502, loss_bbox: 0.1470, loss_kps: 7.3271, loss: 7.8243
2022-07-06 18:12:06,595 - mmdet - INFO - Epoch [2][1150/1312]	lr: 6.250e-04, eta: 6:21:11, time: 0.281, data_time: 0.037, memory: 2017, loss_cls: 0.3509, loss_bbox: 0.1492, loss_kps: 6.5586, loss: 7.0586
2022-07-06 18:12:20,525 - mmdet - INFO - Epoch [2][1200/1312]	lr: 6.250e-04, eta: 6:20:53, time: 0.279, data_time: 0.036, memory: 2017, loss_cls: 0.3409, loss_bbox: 0.1461, loss_kps: 6.7409, loss: 7.2279
2022-07-06 18:12:34,689 - mmdet - INFO - Epoch [2][1250/1312]	lr: 6.250e-04, eta: 6:20:44, time: 0.283, data_time: 0.038, memory: 2017, loss_cls: 0.3412, loss_bbox: 0.1476, loss_kps: 6.8650, loss: 7.3539
2022-07-06 18:12:48,613 - mmdet - INFO - Epoch [2][1300/1312]	lr: 6.250e-04, eta: 6:20:26, time: 0.278, data_time: 0.037, memory: 2017, loss_cls: 0.3419, loss_bbox: 0.1485, loss_kps: 6.9629, loss: 7.4533
2022-07-06 18:13:09,783 - mmdet - INFO - Epoch [3][50/1312]	lr: 6.250e-04, eta: 6:20:26, time: 0.359, data_time: 0.116, memory: 2017, loss_cls: 0.3459, loss_bbox: 0.1443, loss_kps: 6.9886, loss: 7.4789
2022-07-06 18:13:23,554 - mmdet - INFO - Epoch [3][100/1312]	lr: 6.250e-04, eta: 6:20:04, time: 0.275, data_time: 0.036, memory: 2017, loss_cls: 0.3460, loss_bbox: 0.1480, loss_kps: 7.1232, loss: 7.6172
2022-07-06 18:13:37,281 - mmdet - INFO - Epoch [3][150/1312]	lr: 6.250e-04, eta: 6:19:41, time: 0.275, data_time: 0.036, memory: 2017, loss_cls: 0.3441, loss_bbox: 0.1473, loss_kps: 6.7037, loss: 7.1951
2022-07-06 18:13:51,022 - mmdet - INFO - Epoch [3][200/1312]	lr: 6.250e-04, eta: 6:19:19, time: 0.275, data_time: 0.035, memory: 2017, loss_cls: 0.3384, loss_bbox: 0.1462, loss_kps: 7.1224, loss: 7.6069
2022-07-06 18:14:05,124 - mmdet - INFO - Epoch [3][250/1312]	lr: 6.250e-04, eta: 6:19:07, time: 0.282, data_time: 0.039, memory: 2017, loss_cls: 0.3549, loss_bbox: 0.1531, loss_kps: 7.7855, loss: 8.2935
2022-07-06 18:14:19,032 - mmdet - INFO - Epoch [3][300/1312]	lr: 6.250e-04, eta: 6:18:50, time: 0.278, data_time: 0.036, memory: 2017, loss_cls: 0.3436, loss_bbox: 0.1493, loss_kps: 7.4927, loss: 7.9856
2022-07-06 18:14:33,108 - mmdet - INFO - Epoch [3][350/1312]	lr: 6.250e-04, eta: 6:18:37, time: 0.282, data_time: 0.038, memory: 2017, loss_cls: 0.3520, loss_bbox: 0.1446, loss_kps: 7.4331, loss: 7.9297
2022-07-06 18:14:46,997 - mmdet - INFO - Epoch [3][400/1312]	lr: 6.250e-04, eta: 6:18:19, time: 0.278, data_time: 0.037, memory: 2017, loss_cls: 0.3640, loss_bbox: 0.1507, loss_kps: 7.7190, loss: 8.2337
2022-07-06 18:15:01,007 - mmdet - INFO - Epoch [3][450/1312]	lr: 6.250e-04, eta: 6:18:05, time: 0.280, data_time: 0.038, memory: 2017, loss_cls: 0.3673, loss_bbox: 0.1548, loss_kps: 7.9476, loss: 8.4698
2022-07-06 18:15:15,033 - mmdet - INFO - Epoch [3][500/1312]	lr: 6.250e-04, eta: 6:17:51, time: 0.281, data_time: 0.037, memory: 2017, loss_cls: 0.3386, loss_bbox: 0.1433, loss_kps: 6.9305, loss: 7.4124
2022-07-06 18:15:28,851 - mmdet - INFO - Epoch [3][550/1312]	lr: 6.250e-04, eta: 6:17:32, time: 0.276, data_time: 0.037, memory: 2017, loss_cls: 0.3412, loss_bbox: 0.1503, loss_kps: 7.0196, loss: 7.5111
2022-07-06 18:15:42,897 - mmdet - INFO - Epoch [3][600/1312]	lr: 6.250e-04, eta: 6:17:19, time: 0.281, data_time: 0.038, memory: 2017, loss_cls: 0.3386, loss_bbox: 0.1460, loss_kps: 7.1388, loss: 7.6235
2022-07-06 18:15:56,912 - mmdet - INFO - Epoch [3][650/1312]	lr: 6.250e-04, eta: 6:17:04, time: 0.280, data_time: 0.036, memory: 2017, loss_cls: 0.3527, loss_bbox: 0.1473, loss_kps: 7.0267, loss: 7.5267
2022-07-06 18:16:10,970 - mmdet - INFO - Epoch [3][700/1312]	lr: 6.250e-04, eta: 6:16:51, time: 0.281, data_time: 0.037, memory: 2017, loss_cls: 0.3501, loss_bbox: 0.1494, loss_kps: 6.9348, loss: 7.4342
2022-07-06 18:16:24,778 - mmdet - INFO - Epoch [3][750/1312]	lr: 6.250e-04, eta: 6:16:32, time: 0.276, data_time: 0.036, memory: 2017, loss_cls: 0.3602, loss_bbox: 0.1449, loss_kps: 6.8683, loss: 7.3734
2022-07-06 18:16:38,689 - mmdet - INFO - Epoch [3][800/1312]	lr: 6.250e-04, eta: 6:16:16, time: 0.278, data_time: 0.037, memory: 2017, loss_cls: 0.3622, loss_bbox: 0.1478, loss_kps: 7.3022, loss: 7.8122
2022-07-06 18:16:52,802 - mmdet - INFO - Epoch [3][850/1312]	lr: 6.250e-04, eta: 6:16:04, time: 0.282, data_time: 0.038, memory: 2017, loss_cls: 0.3573, loss_bbox: 0.1527, loss_kps: 6.7191, loss: 7.2290
2022-07-06 18:17:06,855 - mmdet - INFO - Epoch [3][900/1312]	lr: 6.250e-04, eta: 6:15:51, time: 0.281, data_time: 0.038, memory: 2017, loss_cls: 0.3538, loss_bbox: 0.1493, loss_kps: 7.0040, loss: 7.5071
